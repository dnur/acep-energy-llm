{"ast":null,"code":"const CLASS_PART_SEPARATOR = '-';\nfunction createClassUtils(config) {\n  const classMap = createClassMap(config);\n  const {\n    conflictingClassGroups,\n    conflictingClassGroupModifiers\n  } = config;\n  function getClassGroupId(className) {\n    const classParts = className.split(CLASS_PART_SEPARATOR);\n    // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n    if (classParts[0] === '' && classParts.length !== 1) {\n      classParts.shift();\n    }\n    return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);\n  }\n  function getConflictingClassGroupIds(classGroupId, hasPostfixModifier) {\n    const conflicts = conflictingClassGroups[classGroupId] || [];\n    if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\n      return [...conflicts, ...conflictingClassGroupModifiers[classGroupId]];\n    }\n    return conflicts;\n  }\n  return {\n    getClassGroupId,\n    getConflictingClassGroupIds\n  };\n}\nfunction getGroupRecursive(classParts, classPartObject) {\n  if (classParts.length === 0) {\n    return classPartObject.classGroupId;\n  }\n  const currentClassPart = classParts[0];\n  const nextClassPartObject = classPartObject.nextPart.get(currentClassPart);\n  const classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : undefined;\n  if (classGroupFromNextClassPart) {\n    return classGroupFromNextClassPart;\n  }\n  if (classPartObject.validators.length === 0) {\n    return undefined;\n  }\n  const classRest = classParts.join(CLASS_PART_SEPARATOR);\n  return classPartObject.validators.find(({\n    validator\n  }) => validator(classRest))?.classGroupId;\n}\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/;\nfunction getGroupIdForArbitraryProperty(className) {\n  if (arbitraryPropertyRegex.test(className)) {\n    const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];\n    const property = arbitraryPropertyClassName?.substring(0, arbitraryPropertyClassName.indexOf(':'));\n    if (property) {\n      // I use two dots here because one dot is used as prefix for class groups in plugins\n      return 'arbitrary..' + property;\n    }\n  }\n}\n/**\n * Exported for testing only\n */\nfunction createClassMap(config) {\n  const {\n    theme,\n    prefix\n  } = config;\n  const classMap = {\n    nextPart: new Map(),\n    validators: []\n  };\n  const prefixedClassGroupEntries = getPrefixedClassGroupEntries(Object.entries(config.classGroups), prefix);\n  prefixedClassGroupEntries.forEach(([classGroupId, classGroup]) => {\n    processClassesRecursively(classGroup, classMap, classGroupId, theme);\n  });\n  return classMap;\n}\nfunction processClassesRecursively(classGroup, classPartObject, classGroupId, theme) {\n  classGroup.forEach(classDefinition => {\n    if (typeof classDefinition === 'string') {\n      const classPartObjectToEdit = classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition);\n      classPartObjectToEdit.classGroupId = classGroupId;\n      return;\n    }\n    if (typeof classDefinition === 'function') {\n      if (isThemeGetter(classDefinition)) {\n        processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);\n        return;\n      }\n      classPartObject.validators.push({\n        validator: classDefinition,\n        classGroupId\n      });\n      return;\n    }\n    Object.entries(classDefinition).forEach(([key, classGroup]) => {\n      processClassesRecursively(classGroup, getPart(classPartObject, key), classGroupId, theme);\n    });\n  });\n}\nfunction getPart(classPartObject, path) {\n  let currentClassPartObject = classPartObject;\n  path.split(CLASS_PART_SEPARATOR).forEach(pathPart => {\n    if (!currentClassPartObject.nextPart.has(pathPart)) {\n      currentClassPartObject.nextPart.set(pathPart, {\n        nextPart: new Map(),\n        validators: []\n      });\n    }\n    currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);\n  });\n  return currentClassPartObject;\n}\nfunction isThemeGetter(func) {\n  return func.isThemeGetter;\n}\nfunction getPrefixedClassGroupEntries(classGroupEntries, prefix) {\n  if (!prefix) {\n    return classGroupEntries;\n  }\n  return classGroupEntries.map(([classGroupId, classGroup]) => {\n    const prefixedClassGroup = classGroup.map(classDefinition => {\n      if (typeof classDefinition === 'string') {\n        return prefix + classDefinition;\n      }\n      if (typeof classDefinition === 'object') {\n        return Object.fromEntries(Object.entries(classDefinition).map(([key, value]) => [prefix + key, value]));\n      }\n      return classDefinition;\n    });\n    return [classGroupId, prefixedClassGroup];\n  });\n}\n\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nfunction createLruCache(maxCacheSize) {\n  if (maxCacheSize < 1) {\n    return {\n      get: () => undefined,\n      set: () => {}\n    };\n  }\n  let cacheSize = 0;\n  let cache = new Map();\n  let previousCache = new Map();\n  function update(key, value) {\n    cache.set(key, value);\n    cacheSize++;\n    if (cacheSize > maxCacheSize) {\n      cacheSize = 0;\n      previousCache = cache;\n      cache = new Map();\n    }\n  }\n  return {\n    get(key) {\n      let value = cache.get(key);\n      if (value !== undefined) {\n        return value;\n      }\n      if ((value = previousCache.get(key)) !== undefined) {\n        update(key, value);\n        return value;\n      }\n    },\n    set(key, value) {\n      if (cache.has(key)) {\n        cache.set(key, value);\n      } else {\n        update(key, value);\n      }\n    }\n  };\n}\nconst IMPORTANT_MODIFIER = '!';\nfunction createSplitModifiers(config) {\n  const separator = config.separator;\n  const isSeparatorSingleCharacter = separator.length === 1;\n  const firstSeparatorCharacter = separator[0];\n  const separatorLength = separator.length;\n  // splitModifiers inspired by https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n  return function splitModifiers(className) {\n    const modifiers = [];\n    let bracketDepth = 0;\n    let modifierStart = 0;\n    let postfixModifierPosition;\n    for (let index = 0; index < className.length; index++) {\n      let currentCharacter = className[index];\n      if (bracketDepth === 0) {\n        if (currentCharacter === firstSeparatorCharacter && (isSeparatorSingleCharacter || className.slice(index, index + separatorLength) === separator)) {\n          modifiers.push(className.slice(modifierStart, index));\n          modifierStart = index + separatorLength;\n          continue;\n        }\n        if (currentCharacter === '/') {\n          postfixModifierPosition = index;\n          continue;\n        }\n      }\n      if (currentCharacter === '[') {\n        bracketDepth++;\n      } else if (currentCharacter === ']') {\n        bracketDepth--;\n      }\n    }\n    const baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);\n    const hasImportantModifier = baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER);\n    const baseClassName = hasImportantModifier ? baseClassNameWithImportantModifier.substring(1) : baseClassNameWithImportantModifier;\n    const maybePostfixModifierPosition = postfixModifierPosition && postfixModifierPosition > modifierStart ? postfixModifierPosition - modifierStart : undefined;\n    return {\n      modifiers,\n      hasImportantModifier,\n      baseClassName,\n      maybePostfixModifierPosition\n    };\n  };\n}\n/**\n * Sorts modifiers according to following schema:\n * - Predefined modifiers are sorted alphabetically\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\n */\nfunction sortModifiers(modifiers) {\n  if (modifiers.length <= 1) {\n    return modifiers;\n  }\n  const sortedModifiers = [];\n  let unsortedModifiers = [];\n  modifiers.forEach(modifier => {\n    const isArbitraryVariant = modifier[0] === '[';\n    if (isArbitraryVariant) {\n      sortedModifiers.push(...unsortedModifiers.sort(), modifier);\n      unsortedModifiers = [];\n    } else {\n      unsortedModifiers.push(modifier);\n    }\n  });\n  sortedModifiers.push(...unsortedModifiers.sort());\n  return sortedModifiers;\n}\nfunction createConfigUtils(config) {\n  return {\n    cache: createLruCache(config.cacheSize),\n    splitModifiers: createSplitModifiers(config),\n    ...createClassUtils(config)\n  };\n}\nconst SPLIT_CLASSES_REGEX = /\\s+/;\nfunction mergeClassList(classList, configUtils) {\n  const {\n    splitModifiers,\n    getClassGroupId,\n    getConflictingClassGroupIds\n  } = configUtils;\n  /**\n   * Set of classGroupIds in following format:\n   * `{importantModifier}{variantModifiers}{classGroupId}`\n   * @example 'float'\n   * @example 'hover:focus:bg-color'\n   * @example 'md:!pr'\n   */\n  const classGroupsInConflict = new Set();\n  return classList.trim().split(SPLIT_CLASSES_REGEX).map(originalClassName => {\n    const {\n      modifiers,\n      hasImportantModifier,\n      baseClassName,\n      maybePostfixModifierPosition\n    } = splitModifiers(originalClassName);\n    let classGroupId = getClassGroupId(maybePostfixModifierPosition ? baseClassName.substring(0, maybePostfixModifierPosition) : baseClassName);\n    let hasPostfixModifier = Boolean(maybePostfixModifierPosition);\n    if (!classGroupId) {\n      if (!maybePostfixModifierPosition) {\n        return {\n          isTailwindClass: false,\n          originalClassName\n        };\n      }\n      classGroupId = getClassGroupId(baseClassName);\n      if (!classGroupId) {\n        return {\n          isTailwindClass: false,\n          originalClassName\n        };\n      }\n      hasPostfixModifier = false;\n    }\n    const variantModifier = sortModifiers(modifiers).join(':');\n    const modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;\n    return {\n      isTailwindClass: true,\n      modifierId,\n      classGroupId,\n      originalClassName,\n      hasPostfixModifier\n    };\n  }).reverse()\n  // Last class in conflict wins, so we need to filter conflicting classes in reverse order.\n  .filter(parsed => {\n    if (!parsed.isTailwindClass) {\n      return true;\n    }\n    const {\n      modifierId,\n      classGroupId,\n      hasPostfixModifier\n    } = parsed;\n    const classId = modifierId + classGroupId;\n    if (classGroupsInConflict.has(classId)) {\n      return false;\n    }\n    classGroupsInConflict.add(classId);\n    getConflictingClassGroupIds(classGroupId, hasPostfixModifier).forEach(group => classGroupsInConflict.add(modifierId + group));\n    return true;\n  }).reverse().map(parsed => parsed.originalClassName).join(' ');\n}\n\n/**\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\n *\n * Specifically:\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\n *\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n */\nfunction twJoin() {\n  let index = 0;\n  let argument;\n  let resolvedValue;\n  let string = '';\n  while (index < arguments.length) {\n    if (argument = arguments[index++]) {\n      if (resolvedValue = toValue(argument)) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n}\nfunction toValue(mix) {\n  if (typeof mix === 'string') {\n    return mix;\n  }\n  let resolvedValue;\n  let string = '';\n  for (let k = 0; k < mix.length; k++) {\n    if (mix[k]) {\n      if (resolvedValue = toValue(mix[k])) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n}\nfunction createTailwindMerge(createConfigFirst, ...createConfigRest) {\n  let configUtils;\n  let cacheGet;\n  let cacheSet;\n  let functionToCall = initTailwindMerge;\n  function initTailwindMerge(classList) {\n    const config = createConfigRest.reduce((previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig), createConfigFirst());\n    configUtils = createConfigUtils(config);\n    cacheGet = configUtils.cache.get;\n    cacheSet = configUtils.cache.set;\n    functionToCall = tailwindMerge;\n    return tailwindMerge(classList);\n  }\n  function tailwindMerge(classList) {\n    const cachedResult = cacheGet(classList);\n    if (cachedResult) {\n      return cachedResult;\n    }\n    const result = mergeClassList(classList, configUtils);\n    cacheSet(classList, result);\n    return result;\n  }\n  return function callTailwindMerge() {\n    return functionToCall(twJoin.apply(null, arguments));\n  };\n}\nfunction fromTheme(key) {\n  const themeGetter = theme => theme[key] || [];\n  themeGetter.isThemeGetter = true;\n  return themeGetter;\n}\nconst arbitraryValueRegex = /^\\[(?:([a-z-]+):)?(.+)\\]$/i;\nconst fractionRegex = /^\\d+\\/\\d+$/;\nconst stringLengths = /*#__PURE__*/new Set(['px', 'full', 'screen']);\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/;\nconst lengthUnitRegex = /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/;\nconst colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\\(.+\\)$/;\n// Shadow always begins with x and y offset separated by underscore optionally prepended by inset\nconst shadowRegex = /^(inset_)?-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/;\nconst imageRegex = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\\(.+\\)$/;\nfunction isLength(value) {\n  return isNumber(value) || stringLengths.has(value) || fractionRegex.test(value);\n}\nfunction isArbitraryLength(value) {\n  return getIsArbitraryValue(value, 'length', isLengthOnly);\n}\nfunction isNumber(value) {\n  return Boolean(value) && !Number.isNaN(Number(value));\n}\nfunction isArbitraryNumber(value) {\n  return getIsArbitraryValue(value, 'number', isNumber);\n}\nfunction isInteger(value) {\n  return Boolean(value) && Number.isInteger(Number(value));\n}\nfunction isPercent(value) {\n  return value.endsWith('%') && isNumber(value.slice(0, -1));\n}\nfunction isArbitraryValue(value) {\n  return arbitraryValueRegex.test(value);\n}\nfunction isTshirtSize(value) {\n  return tshirtUnitRegex.test(value);\n}\nconst sizeLabels = /*#__PURE__*/new Set(['length', 'size', 'percentage']);\nfunction isArbitrarySize(value) {\n  return getIsArbitraryValue(value, sizeLabels, isNever);\n}\nfunction isArbitraryPosition(value) {\n  return getIsArbitraryValue(value, 'position', isNever);\n}\nconst imageLabels = /*#__PURE__*/new Set(['image', 'url']);\nfunction isArbitraryImage(value) {\n  return getIsArbitraryValue(value, imageLabels, isImage);\n}\nfunction isArbitraryShadow(value) {\n  return getIsArbitraryValue(value, '', isShadow);\n}\nfunction isAny() {\n  return true;\n}\nfunction getIsArbitraryValue(value, label, testValue) {\n  const result = arbitraryValueRegex.exec(value);\n  if (result) {\n    if (result[1]) {\n      return typeof label === 'string' ? result[1] === label : label.has(result[1]);\n    }\n    return testValue(result[2]);\n  }\n  return false;\n}\nfunction isLengthOnly(value) {\n  // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.\n  // For example, `hsl(0 0% 0%)` would be classified as a length without this check.\n  // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.\n  return lengthUnitRegex.test(value) && !colorFunctionRegex.test(value);\n}\nfunction isNever() {\n  return false;\n}\nfunction isShadow(value) {\n  return shadowRegex.test(value);\n}\nfunction isImage(value) {\n  return imageRegex.test(value);\n}\nconst validators = /*#__PURE__*/Object.defineProperty({\n  __proto__: null,\n  isAny,\n  isArbitraryImage,\n  isArbitraryLength,\n  isArbitraryNumber,\n  isArbitraryPosition,\n  isArbitraryShadow,\n  isArbitrarySize,\n  isArbitraryValue,\n  isInteger,\n  isLength,\n  isNumber,\n  isPercent,\n  isTshirtSize\n}, Symbol.toStringTag, {\n  value: 'Module'\n});\nfunction getDefaultConfig() {\n  const colors = fromTheme('colors');\n  const spacing = fromTheme('spacing');\n  const blur = fromTheme('blur');\n  const brightness = fromTheme('brightness');\n  const borderColor = fromTheme('borderColor');\n  const borderRadius = fromTheme('borderRadius');\n  const borderSpacing = fromTheme('borderSpacing');\n  const borderWidth = fromTheme('borderWidth');\n  const contrast = fromTheme('contrast');\n  const grayscale = fromTheme('grayscale');\n  const hueRotate = fromTheme('hueRotate');\n  const invert = fromTheme('invert');\n  const gap = fromTheme('gap');\n  const gradientColorStops = fromTheme('gradientColorStops');\n  const gradientColorStopPositions = fromTheme('gradientColorStopPositions');\n  const inset = fromTheme('inset');\n  const margin = fromTheme('margin');\n  const opacity = fromTheme('opacity');\n  const padding = fromTheme('padding');\n  const saturate = fromTheme('saturate');\n  const scale = fromTheme('scale');\n  const sepia = fromTheme('sepia');\n  const skew = fromTheme('skew');\n  const space = fromTheme('space');\n  const translate = fromTheme('translate');\n  const getOverscroll = () => ['auto', 'contain', 'none'];\n  const getOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'];\n  const getSpacingWithAutoAndArbitrary = () => ['auto', isArbitraryValue, spacing];\n  const getSpacingWithArbitrary = () => [isArbitraryValue, spacing];\n  const getLengthWithEmptyAndArbitrary = () => ['', isLength, isArbitraryLength];\n  const getNumberWithAutoAndArbitrary = () => ['auto', isNumber, isArbitraryValue];\n  const getPositions = () => ['bottom', 'center', 'left', 'left-bottom', 'left-top', 'right', 'right-bottom', 'right-top', 'top'];\n  const getLineStyles = () => ['solid', 'dashed', 'dotted', 'double', 'none'];\n  const getBlendModes = () => ['normal', 'multiply', 'screen', 'overlay', 'darken', 'lighten', 'color-dodge', 'color-burn', 'hard-light', 'soft-light', 'difference', 'exclusion', 'hue', 'saturation', 'color', 'luminosity', 'plus-lighter'];\n  const getAlign = () => ['start', 'end', 'center', 'between', 'around', 'evenly', 'stretch'];\n  const getZeroAndEmpty = () => ['', '0', isArbitraryValue];\n  const getBreaks = () => ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'];\n  const getNumber = () => [isNumber, isArbitraryNumber];\n  const getNumberAndArbitrary = () => [isNumber, isArbitraryValue];\n  return {\n    cacheSize: 500,\n    separator: ':',\n    theme: {\n      colors: [isAny],\n      spacing: [isLength, isArbitraryLength],\n      blur: ['none', '', isTshirtSize, isArbitraryValue],\n      brightness: getNumber(),\n      borderColor: [colors],\n      borderRadius: ['none', '', 'full', isTshirtSize, isArbitraryValue],\n      borderSpacing: getSpacingWithArbitrary(),\n      borderWidth: getLengthWithEmptyAndArbitrary(),\n      contrast: getNumber(),\n      grayscale: getZeroAndEmpty(),\n      hueRotate: getNumberAndArbitrary(),\n      invert: getZeroAndEmpty(),\n      gap: getSpacingWithArbitrary(),\n      gradientColorStops: [colors],\n      gradientColorStopPositions: [isPercent, isArbitraryLength],\n      inset: getSpacingWithAutoAndArbitrary(),\n      margin: getSpacingWithAutoAndArbitrary(),\n      opacity: getNumber(),\n      padding: getSpacingWithArbitrary(),\n      saturate: getNumber(),\n      scale: getNumber(),\n      sepia: getZeroAndEmpty(),\n      skew: getNumberAndArbitrary(),\n      space: getSpacingWithArbitrary(),\n      translate: getSpacingWithArbitrary()\n    },\n    classGroups: {\n      // Layout\n      /**\n       * Aspect Ratio\n       * @see https://tailwindcss.com/docs/aspect-ratio\n       */\n      aspect: [{\n        aspect: ['auto', 'square', 'video', isArbitraryValue]\n      }],\n      /**\n       * Container\n       * @see https://tailwindcss.com/docs/container\n       */\n      container: ['container'],\n      /**\n       * Columns\n       * @see https://tailwindcss.com/docs/columns\n       */\n      columns: [{\n        columns: [isTshirtSize]\n      }],\n      /**\n       * Break After\n       * @see https://tailwindcss.com/docs/break-after\n       */\n      'break-after': [{\n        'break-after': getBreaks()\n      }],\n      /**\n       * Break Before\n       * @see https://tailwindcss.com/docs/break-before\n       */\n      'break-before': [{\n        'break-before': getBreaks()\n      }],\n      /**\n       * Break Inside\n       * @see https://tailwindcss.com/docs/break-inside\n       */\n      'break-inside': [{\n        'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column']\n      }],\n      /**\n       * Box Decoration Break\n       * @see https://tailwindcss.com/docs/box-decoration-break\n       */\n      'box-decoration': [{\n        'box-decoration': ['slice', 'clone']\n      }],\n      /**\n       * Box Sizing\n       * @see https://tailwindcss.com/docs/box-sizing\n       */\n      box: [{\n        box: ['border', 'content']\n      }],\n      /**\n       * Display\n       * @see https://tailwindcss.com/docs/display\n       */\n      display: ['block', 'inline-block', 'inline', 'flex', 'inline-flex', 'table', 'inline-table', 'table-caption', 'table-cell', 'table-column', 'table-column-group', 'table-footer-group', 'table-header-group', 'table-row-group', 'table-row', 'flow-root', 'grid', 'inline-grid', 'contents', 'list-item', 'hidden'],\n      /**\n       * Floats\n       * @see https://tailwindcss.com/docs/float\n       */\n      float: [{\n        float: ['right', 'left', 'none', 'start', 'end']\n      }],\n      /**\n       * Clear\n       * @see https://tailwindcss.com/docs/clear\n       */\n      clear: [{\n        clear: ['left', 'right', 'both', 'none', 'start', 'end']\n      }],\n      /**\n       * Isolation\n       * @see https://tailwindcss.com/docs/isolation\n       */\n      isolation: ['isolate', 'isolation-auto'],\n      /**\n       * Object Fit\n       * @see https://tailwindcss.com/docs/object-fit\n       */\n      'object-fit': [{\n        object: ['contain', 'cover', 'fill', 'none', 'scale-down']\n      }],\n      /**\n       * Object Position\n       * @see https://tailwindcss.com/docs/object-position\n       */\n      'object-position': [{\n        object: [...getPositions(), isArbitraryValue]\n      }],\n      /**\n       * Overflow\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      overflow: [{\n        overflow: getOverflow()\n      }],\n      /**\n       * Overflow X\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      'overflow-x': [{\n        'overflow-x': getOverflow()\n      }],\n      /**\n       * Overflow Y\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      'overflow-y': [{\n        'overflow-y': getOverflow()\n      }],\n      /**\n       * Overscroll Behavior\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      overscroll: [{\n        overscroll: getOverscroll()\n      }],\n      /**\n       * Overscroll Behavior X\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      'overscroll-x': [{\n        'overscroll-x': getOverscroll()\n      }],\n      /**\n       * Overscroll Behavior Y\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      'overscroll-y': [{\n        'overscroll-y': getOverscroll()\n      }],\n      /**\n       * Position\n       * @see https://tailwindcss.com/docs/position\n       */\n      position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n      /**\n       * Top / Right / Bottom / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      inset: [{\n        inset: [inset]\n      }],\n      /**\n       * Right / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      'inset-x': [{\n        'inset-x': [inset]\n      }],\n      /**\n       * Top / Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      'inset-y': [{\n        'inset-y': [inset]\n      }],\n      /**\n       * Start\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      start: [{\n        start: [inset]\n      }],\n      /**\n       * End\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      end: [{\n        end: [inset]\n      }],\n      /**\n       * Top\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      top: [{\n        top: [inset]\n      }],\n      /**\n       * Right\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      right: [{\n        right: [inset]\n      }],\n      /**\n       * Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      bottom: [{\n        bottom: [inset]\n      }],\n      /**\n       * Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      left: [{\n        left: [inset]\n      }],\n      /**\n       * Visibility\n       * @see https://tailwindcss.com/docs/visibility\n       */\n      visibility: ['visible', 'invisible', 'collapse'],\n      /**\n       * Z-Index\n       * @see https://tailwindcss.com/docs/z-index\n       */\n      z: [{\n        z: ['auto', isInteger, isArbitraryValue]\n      }],\n      // Flexbox and Grid\n      /**\n       * Flex Basis\n       * @see https://tailwindcss.com/docs/flex-basis\n       */\n      basis: [{\n        basis: getSpacingWithAutoAndArbitrary()\n      }],\n      /**\n       * Flex Direction\n       * @see https://tailwindcss.com/docs/flex-direction\n       */\n      'flex-direction': [{\n        flex: ['row', 'row-reverse', 'col', 'col-reverse']\n      }],\n      /**\n       * Flex Wrap\n       * @see https://tailwindcss.com/docs/flex-wrap\n       */\n      'flex-wrap': [{\n        flex: ['wrap', 'wrap-reverse', 'nowrap']\n      }],\n      /**\n       * Flex\n       * @see https://tailwindcss.com/docs/flex\n       */\n      flex: [{\n        flex: ['1', 'auto', 'initial', 'none', isArbitraryValue]\n      }],\n      /**\n       * Flex Grow\n       * @see https://tailwindcss.com/docs/flex-grow\n       */\n      grow: [{\n        grow: getZeroAndEmpty()\n      }],\n      /**\n       * Flex Shrink\n       * @see https://tailwindcss.com/docs/flex-shrink\n       */\n      shrink: [{\n        shrink: getZeroAndEmpty()\n      }],\n      /**\n       * Order\n       * @see https://tailwindcss.com/docs/order\n       */\n      order: [{\n        order: ['first', 'last', 'none', isInteger, isArbitraryValue]\n      }],\n      /**\n       * Grid Template Columns\n       * @see https://tailwindcss.com/docs/grid-template-columns\n       */\n      'grid-cols': [{\n        'grid-cols': [isAny]\n      }],\n      /**\n       * Grid Column Start / End\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-start-end': [{\n        col: ['auto', {\n          span: ['full', isInteger, isArbitraryValue]\n        }, isArbitraryValue]\n      }],\n      /**\n       * Grid Column Start\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-start': [{\n        'col-start': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Column End\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-end': [{\n        'col-end': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Template Rows\n       * @see https://tailwindcss.com/docs/grid-template-rows\n       */\n      'grid-rows': [{\n        'grid-rows': [isAny]\n      }],\n      /**\n       * Grid Row Start / End\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-start-end': [{\n        row: ['auto', {\n          span: [isInteger, isArbitraryValue]\n        }, isArbitraryValue]\n      }],\n      /**\n       * Grid Row Start\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-start': [{\n        'row-start': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Row End\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-end': [{\n        'row-end': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Auto Flow\n       * @see https://tailwindcss.com/docs/grid-auto-flow\n       */\n      'grid-flow': [{\n        'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense']\n      }],\n      /**\n       * Grid Auto Columns\n       * @see https://tailwindcss.com/docs/grid-auto-columns\n       */\n      'auto-cols': [{\n        'auto-cols': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n      /**\n       * Grid Auto Rows\n       * @see https://tailwindcss.com/docs/grid-auto-rows\n       */\n      'auto-rows': [{\n        'auto-rows': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n      /**\n       * Gap\n       * @see https://tailwindcss.com/docs/gap\n       */\n      gap: [{\n        gap: [gap]\n      }],\n      /**\n       * Gap X\n       * @see https://tailwindcss.com/docs/gap\n       */\n      'gap-x': [{\n        'gap-x': [gap]\n      }],\n      /**\n       * Gap Y\n       * @see https://tailwindcss.com/docs/gap\n       */\n      'gap-y': [{\n        'gap-y': [gap]\n      }],\n      /**\n       * Justify Content\n       * @see https://tailwindcss.com/docs/justify-content\n       */\n      'justify-content': [{\n        justify: ['normal', ...getAlign()]\n      }],\n      /**\n       * Justify Items\n       * @see https://tailwindcss.com/docs/justify-items\n       */\n      'justify-items': [{\n        'justify-items': ['start', 'end', 'center', 'stretch']\n      }],\n      /**\n       * Justify Self\n       * @see https://tailwindcss.com/docs/justify-self\n       */\n      'justify-self': [{\n        'justify-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n      /**\n       * Align Content\n       * @see https://tailwindcss.com/docs/align-content\n       */\n      'align-content': [{\n        content: ['normal', ...getAlign(), 'baseline']\n      }],\n      /**\n       * Align Items\n       * @see https://tailwindcss.com/docs/align-items\n       */\n      'align-items': [{\n        items: ['start', 'end', 'center', 'baseline', 'stretch']\n      }],\n      /**\n       * Align Self\n       * @see https://tailwindcss.com/docs/align-self\n       */\n      'align-self': [{\n        self: ['auto', 'start', 'end', 'center', 'stretch', 'baseline']\n      }],\n      /**\n       * Place Content\n       * @see https://tailwindcss.com/docs/place-content\n       */\n      'place-content': [{\n        'place-content': [...getAlign(), 'baseline']\n      }],\n      /**\n       * Place Items\n       * @see https://tailwindcss.com/docs/place-items\n       */\n      'place-items': [{\n        'place-items': ['start', 'end', 'center', 'baseline', 'stretch']\n      }],\n      /**\n       * Place Self\n       * @see https://tailwindcss.com/docs/place-self\n       */\n      'place-self': [{\n        'place-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n      // Spacing\n      /**\n       * Padding\n       * @see https://tailwindcss.com/docs/padding\n       */\n      p: [{\n        p: [padding]\n      }],\n      /**\n       * Padding X\n       * @see https://tailwindcss.com/docs/padding\n       */\n      px: [{\n        px: [padding]\n      }],\n      /**\n       * Padding Y\n       * @see https://tailwindcss.com/docs/padding\n       */\n      py: [{\n        py: [padding]\n      }],\n      /**\n       * Padding Start\n       * @see https://tailwindcss.com/docs/padding\n       */\n      ps: [{\n        ps: [padding]\n      }],\n      /**\n       * Padding End\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pe: [{\n        pe: [padding]\n      }],\n      /**\n       * Padding Top\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pt: [{\n        pt: [padding]\n      }],\n      /**\n       * Padding Right\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pr: [{\n        pr: [padding]\n      }],\n      /**\n       * Padding Bottom\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pb: [{\n        pb: [padding]\n      }],\n      /**\n       * Padding Left\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pl: [{\n        pl: [padding]\n      }],\n      /**\n       * Margin\n       * @see https://tailwindcss.com/docs/margin\n       */\n      m: [{\n        m: [margin]\n      }],\n      /**\n       * Margin X\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mx: [{\n        mx: [margin]\n      }],\n      /**\n       * Margin Y\n       * @see https://tailwindcss.com/docs/margin\n       */\n      my: [{\n        my: [margin]\n      }],\n      /**\n       * Margin Start\n       * @see https://tailwindcss.com/docs/margin\n       */\n      ms: [{\n        ms: [margin]\n      }],\n      /**\n       * Margin End\n       * @see https://tailwindcss.com/docs/margin\n       */\n      me: [{\n        me: [margin]\n      }],\n      /**\n       * Margin Top\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mt: [{\n        mt: [margin]\n      }],\n      /**\n       * Margin Right\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mr: [{\n        mr: [margin]\n      }],\n      /**\n       * Margin Bottom\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mb: [{\n        mb: [margin]\n      }],\n      /**\n       * Margin Left\n       * @see https://tailwindcss.com/docs/margin\n       */\n      ml: [{\n        ml: [margin]\n      }],\n      /**\n       * Space Between X\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-x': [{\n        'space-x': [space]\n      }],\n      /**\n       * Space Between X Reverse\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-x-reverse': ['space-x-reverse'],\n      /**\n       * Space Between Y\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-y': [{\n        'space-y': [space]\n      }],\n      /**\n       * Space Between Y Reverse\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-y-reverse': ['space-y-reverse'],\n      // Sizing\n      /**\n       * Width\n       * @see https://tailwindcss.com/docs/width\n       */\n      w: [{\n        w: ['auto', 'min', 'max', 'fit', 'svw', 'lvw', 'dvw', isArbitraryValue, spacing]\n      }],\n      /**\n       * Min-Width\n       * @see https://tailwindcss.com/docs/min-width\n       */\n      'min-w': [{\n        'min-w': [isArbitraryValue, spacing, 'min', 'max', 'fit']\n      }],\n      /**\n       * Max-Width\n       * @see https://tailwindcss.com/docs/max-width\n       */\n      'max-w': [{\n        'max-w': [isArbitraryValue, spacing, 'none', 'full', 'min', 'max', 'fit', 'prose', {\n          screen: [isTshirtSize]\n        }, isTshirtSize]\n      }],\n      /**\n       * Height\n       * @see https://tailwindcss.com/docs/height\n       */\n      h: [{\n        h: [isArbitraryValue, spacing, 'auto', 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\n      }],\n      /**\n       * Min-Height\n       * @see https://tailwindcss.com/docs/min-height\n       */\n      'min-h': [{\n        'min-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\n      }],\n      /**\n       * Max-Height\n       * @see https://tailwindcss.com/docs/max-height\n       */\n      'max-h': [{\n        'max-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\n      }],\n      /**\n       * Size\n       * @see https://tailwindcss.com/docs/size\n       */\n      size: [{\n        size: [isArbitraryValue, spacing, 'auto', 'min', 'max', 'fit']\n      }],\n      // Typography\n      /**\n       * Font Size\n       * @see https://tailwindcss.com/docs/font-size\n       */\n      'font-size': [{\n        text: ['base', isTshirtSize, isArbitraryLength]\n      }],\n      /**\n       * Font Smoothing\n       * @see https://tailwindcss.com/docs/font-smoothing\n       */\n      'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n      /**\n       * Font Style\n       * @see https://tailwindcss.com/docs/font-style\n       */\n      'font-style': ['italic', 'not-italic'],\n      /**\n       * Font Weight\n       * @see https://tailwindcss.com/docs/font-weight\n       */\n      'font-weight': [{\n        font: ['thin', 'extralight', 'light', 'normal', 'medium', 'semibold', 'bold', 'extrabold', 'black', isArbitraryNumber]\n      }],\n      /**\n       * Font Family\n       * @see https://tailwindcss.com/docs/font-family\n       */\n      'font-family': [{\n        font: [isAny]\n      }],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-normal': ['normal-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-ordinal': ['ordinal'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-slashed-zero': ['slashed-zero'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-fraction': ['diagonal-fractions', 'stacked-fractons'],\n      /**\n       * Letter Spacing\n       * @see https://tailwindcss.com/docs/letter-spacing\n       */\n      tracking: [{\n        tracking: ['tighter', 'tight', 'normal', 'wide', 'wider', 'widest', isArbitraryValue]\n      }],\n      /**\n       * Line Clamp\n       * @see https://tailwindcss.com/docs/line-clamp\n       */\n      'line-clamp': [{\n        'line-clamp': ['none', isNumber, isArbitraryNumber]\n      }],\n      /**\n       * Line Height\n       * @see https://tailwindcss.com/docs/line-height\n       */\n      leading: [{\n        leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose', isLength, isArbitraryValue]\n      }],\n      /**\n       * List Style Image\n       * @see https://tailwindcss.com/docs/list-style-image\n       */\n      'list-image': [{\n        'list-image': ['none', isArbitraryValue]\n      }],\n      /**\n       * List Style Type\n       * @see https://tailwindcss.com/docs/list-style-type\n       */\n      'list-style-type': [{\n        list: ['none', 'disc', 'decimal', isArbitraryValue]\n      }],\n      /**\n       * List Style Position\n       * @see https://tailwindcss.com/docs/list-style-position\n       */\n      'list-style-position': [{\n        list: ['inside', 'outside']\n      }],\n      /**\n       * Placeholder Color\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/placeholder-color\n       */\n      'placeholder-color': [{\n        placeholder: [colors]\n      }],\n      /**\n       * Placeholder Opacity\n       * @see https://tailwindcss.com/docs/placeholder-opacity\n       */\n      'placeholder-opacity': [{\n        'placeholder-opacity': [opacity]\n      }],\n      /**\n       * Text Alignment\n       * @see https://tailwindcss.com/docs/text-align\n       */\n      'text-alignment': [{\n        text: ['left', 'center', 'right', 'justify', 'start', 'end']\n      }],\n      /**\n       * Text Color\n       * @see https://tailwindcss.com/docs/text-color\n       */\n      'text-color': [{\n        text: [colors]\n      }],\n      /**\n       * Text Opacity\n       * @see https://tailwindcss.com/docs/text-opacity\n       */\n      'text-opacity': [{\n        'text-opacity': [opacity]\n      }],\n      /**\n       * Text Decoration\n       * @see https://tailwindcss.com/docs/text-decoration\n       */\n      'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n      /**\n       * Text Decoration Style\n       * @see https://tailwindcss.com/docs/text-decoration-style\n       */\n      'text-decoration-style': [{\n        decoration: [...getLineStyles(), 'wavy']\n      }],\n      /**\n       * Text Decoration Thickness\n       * @see https://tailwindcss.com/docs/text-decoration-thickness\n       */\n      'text-decoration-thickness': [{\n        decoration: ['auto', 'from-font', isLength, isArbitraryLength]\n      }],\n      /**\n       * Text Underline Offset\n       * @see https://tailwindcss.com/docs/text-underline-offset\n       */\n      'underline-offset': [{\n        'underline-offset': ['auto', isLength, isArbitraryValue]\n      }],\n      /**\n       * Text Decoration Color\n       * @see https://tailwindcss.com/docs/text-decoration-color\n       */\n      'text-decoration-color': [{\n        decoration: [colors]\n      }],\n      /**\n       * Text Transform\n       * @see https://tailwindcss.com/docs/text-transform\n       */\n      'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n      /**\n       * Text Overflow\n       * @see https://tailwindcss.com/docs/text-overflow\n       */\n      'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n      /**\n       * Text Wrap\n       * @see https://tailwindcss.com/docs/text-wrap\n       */\n      'text-wrap': [{\n        text: ['wrap', 'nowrap', 'balance', 'pretty']\n      }],\n      /**\n       * Text Indent\n       * @see https://tailwindcss.com/docs/text-indent\n       */\n      indent: [{\n        indent: getSpacingWithArbitrary()\n      }],\n      /**\n       * Vertical Alignment\n       * @see https://tailwindcss.com/docs/vertical-align\n       */\n      'vertical-align': [{\n        align: ['baseline', 'top', 'middle', 'bottom', 'text-top', 'text-bottom', 'sub', 'super', isArbitraryValue]\n      }],\n      /**\n       * Whitespace\n       * @see https://tailwindcss.com/docs/whitespace\n       */\n      whitespace: [{\n        whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap', 'break-spaces']\n      }],\n      /**\n       * Word Break\n       * @see https://tailwindcss.com/docs/word-break\n       */\n      break: [{\n        break: ['normal', 'words', 'all', 'keep']\n      }],\n      /**\n       * Hyphens\n       * @see https://tailwindcss.com/docs/hyphens\n       */\n      hyphens: [{\n        hyphens: ['none', 'manual', 'auto']\n      }],\n      /**\n       * Content\n       * @see https://tailwindcss.com/docs/content\n       */\n      content: [{\n        content: ['none', isArbitraryValue]\n      }],\n      // Backgrounds\n      /**\n       * Background Attachment\n       * @see https://tailwindcss.com/docs/background-attachment\n       */\n      'bg-attachment': [{\n        bg: ['fixed', 'local', 'scroll']\n      }],\n      /**\n       * Background Clip\n       * @see https://tailwindcss.com/docs/background-clip\n       */\n      'bg-clip': [{\n        'bg-clip': ['border', 'padding', 'content', 'text']\n      }],\n      /**\n       * Background Opacity\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/background-opacity\n       */\n      'bg-opacity': [{\n        'bg-opacity': [opacity]\n      }],\n      /**\n       * Background Origin\n       * @see https://tailwindcss.com/docs/background-origin\n       */\n      'bg-origin': [{\n        'bg-origin': ['border', 'padding', 'content']\n      }],\n      /**\n       * Background Position\n       * @see https://tailwindcss.com/docs/background-position\n       */\n      'bg-position': [{\n        bg: [...getPositions(), isArbitraryPosition]\n      }],\n      /**\n       * Background Repeat\n       * @see https://tailwindcss.com/docs/background-repeat\n       */\n      'bg-repeat': [{\n        bg: ['no-repeat', {\n          repeat: ['', 'x', 'y', 'round', 'space']\n        }]\n      }],\n      /**\n       * Background Size\n       * @see https://tailwindcss.com/docs/background-size\n       */\n      'bg-size': [{\n        bg: ['auto', 'cover', 'contain', isArbitrarySize]\n      }],\n      /**\n       * Background Image\n       * @see https://tailwindcss.com/docs/background-image\n       */\n      'bg-image': [{\n        bg: ['none', {\n          'gradient-to': ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl']\n        }, isArbitraryImage]\n      }],\n      /**\n       * Background Color\n       * @see https://tailwindcss.com/docs/background-color\n       */\n      'bg-color': [{\n        bg: [colors]\n      }],\n      /**\n       * Gradient Color Stops From Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-from-pos': [{\n        from: [gradientColorStopPositions]\n      }],\n      /**\n       * Gradient Color Stops Via Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-via-pos': [{\n        via: [gradientColorStopPositions]\n      }],\n      /**\n       * Gradient Color Stops To Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-to-pos': [{\n        to: [gradientColorStopPositions]\n      }],\n      /**\n       * Gradient Color Stops From\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-from': [{\n        from: [gradientColorStops]\n      }],\n      /**\n       * Gradient Color Stops Via\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-via': [{\n        via: [gradientColorStops]\n      }],\n      /**\n       * Gradient Color Stops To\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-to': [{\n        to: [gradientColorStops]\n      }],\n      // Borders\n      /**\n       * Border Radius\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      rounded: [{\n        rounded: [borderRadius]\n      }],\n      /**\n       * Border Radius Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-s': [{\n        'rounded-s': [borderRadius]\n      }],\n      /**\n       * Border Radius End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-e': [{\n        'rounded-e': [borderRadius]\n      }],\n      /**\n       * Border Radius Top\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-t': [{\n        'rounded-t': [borderRadius]\n      }],\n      /**\n       * Border Radius Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-r': [{\n        'rounded-r': [borderRadius]\n      }],\n      /**\n       * Border Radius Bottom\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-b': [{\n        'rounded-b': [borderRadius]\n      }],\n      /**\n       * Border Radius Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-l': [{\n        'rounded-l': [borderRadius]\n      }],\n      /**\n       * Border Radius Start Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-ss': [{\n        'rounded-ss': [borderRadius]\n      }],\n      /**\n       * Border Radius Start End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-se': [{\n        'rounded-se': [borderRadius]\n      }],\n      /**\n       * Border Radius End End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-ee': [{\n        'rounded-ee': [borderRadius]\n      }],\n      /**\n       * Border Radius End Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-es': [{\n        'rounded-es': [borderRadius]\n      }],\n      /**\n       * Border Radius Top Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-tl': [{\n        'rounded-tl': [borderRadius]\n      }],\n      /**\n       * Border Radius Top Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-tr': [{\n        'rounded-tr': [borderRadius]\n      }],\n      /**\n       * Border Radius Bottom Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-br': [{\n        'rounded-br': [borderRadius]\n      }],\n      /**\n       * Border Radius Bottom Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-bl': [{\n        'rounded-bl': [borderRadius]\n      }],\n      /**\n       * Border Width\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w': [{\n        border: [borderWidth]\n      }],\n      /**\n       * Border Width X\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-x': [{\n        'border-x': [borderWidth]\n      }],\n      /**\n       * Border Width Y\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-y': [{\n        'border-y': [borderWidth]\n      }],\n      /**\n       * Border Width Start\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-s': [{\n        'border-s': [borderWidth]\n      }],\n      /**\n       * Border Width End\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-e': [{\n        'border-e': [borderWidth]\n      }],\n      /**\n       * Border Width Top\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-t': [{\n        'border-t': [borderWidth]\n      }],\n      /**\n       * Border Width Right\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-r': [{\n        'border-r': [borderWidth]\n      }],\n      /**\n       * Border Width Bottom\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-b': [{\n        'border-b': [borderWidth]\n      }],\n      /**\n       * Border Width Left\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-l': [{\n        'border-l': [borderWidth]\n      }],\n      /**\n       * Border Opacity\n       * @see https://tailwindcss.com/docs/border-opacity\n       */\n      'border-opacity': [{\n        'border-opacity': [opacity]\n      }],\n      /**\n       * Border Style\n       * @see https://tailwindcss.com/docs/border-style\n       */\n      'border-style': [{\n        border: [...getLineStyles(), 'hidden']\n      }],\n      /**\n       * Divide Width X\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-x': [{\n        'divide-x': [borderWidth]\n      }],\n      /**\n       * Divide Width X Reverse\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-x-reverse': ['divide-x-reverse'],\n      /**\n       * Divide Width Y\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-y': [{\n        'divide-y': [borderWidth]\n      }],\n      /**\n       * Divide Width Y Reverse\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-y-reverse': ['divide-y-reverse'],\n      /**\n       * Divide Opacity\n       * @see https://tailwindcss.com/docs/divide-opacity\n       */\n      'divide-opacity': [{\n        'divide-opacity': [opacity]\n      }],\n      /**\n       * Divide Style\n       * @see https://tailwindcss.com/docs/divide-style\n       */\n      'divide-style': [{\n        divide: getLineStyles()\n      }],\n      /**\n       * Border Color\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color': [{\n        border: [borderColor]\n      }],\n      /**\n       * Border Color X\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-x': [{\n        'border-x': [borderColor]\n      }],\n      /**\n       * Border Color Y\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-y': [{\n        'border-y': [borderColor]\n      }],\n      /**\n       * Border Color Top\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-t': [{\n        'border-t': [borderColor]\n      }],\n      /**\n       * Border Color Right\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-r': [{\n        'border-r': [borderColor]\n      }],\n      /**\n       * Border Color Bottom\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-b': [{\n        'border-b': [borderColor]\n      }],\n      /**\n       * Border Color Left\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-l': [{\n        'border-l': [borderColor]\n      }],\n      /**\n       * Divide Color\n       * @see https://tailwindcss.com/docs/divide-color\n       */\n      'divide-color': [{\n        divide: [borderColor]\n      }],\n      /**\n       * Outline Style\n       * @see https://tailwindcss.com/docs/outline-style\n       */\n      'outline-style': [{\n        outline: ['', ...getLineStyles()]\n      }],\n      /**\n       * Outline Offset\n       * @see https://tailwindcss.com/docs/outline-offset\n       */\n      'outline-offset': [{\n        'outline-offset': [isLength, isArbitraryValue]\n      }],\n      /**\n       * Outline Width\n       * @see https://tailwindcss.com/docs/outline-width\n       */\n      'outline-w': [{\n        outline: [isLength, isArbitraryLength]\n      }],\n      /**\n       * Outline Color\n       * @see https://tailwindcss.com/docs/outline-color\n       */\n      'outline-color': [{\n        outline: [colors]\n      }],\n      /**\n       * Ring Width\n       * @see https://tailwindcss.com/docs/ring-width\n       */\n      'ring-w': [{\n        ring: getLengthWithEmptyAndArbitrary()\n      }],\n      /**\n       * Ring Width Inset\n       * @see https://tailwindcss.com/docs/ring-width\n       */\n      'ring-w-inset': ['ring-inset'],\n      /**\n       * Ring Color\n       * @see https://tailwindcss.com/docs/ring-color\n       */\n      'ring-color': [{\n        ring: [colors]\n      }],\n      /**\n       * Ring Opacity\n       * @see https://tailwindcss.com/docs/ring-opacity\n       */\n      'ring-opacity': [{\n        'ring-opacity': [opacity]\n      }],\n      /**\n       * Ring Offset Width\n       * @see https://tailwindcss.com/docs/ring-offset-width\n       */\n      'ring-offset-w': [{\n        'ring-offset': [isLength, isArbitraryLength]\n      }],\n      /**\n       * Ring Offset Color\n       * @see https://tailwindcss.com/docs/ring-offset-color\n       */\n      'ring-offset-color': [{\n        'ring-offset': [colors]\n      }],\n      // Effects\n      /**\n       * Box Shadow\n       * @see https://tailwindcss.com/docs/box-shadow\n       */\n      shadow: [{\n        shadow: ['', 'inner', 'none', isTshirtSize, isArbitraryShadow]\n      }],\n      /**\n       * Box Shadow Color\n       * @see https://tailwindcss.com/docs/box-shadow-color\n       */\n      'shadow-color': [{\n        shadow: [isAny]\n      }],\n      /**\n       * Opacity\n       * @see https://tailwindcss.com/docs/opacity\n       */\n      opacity: [{\n        opacity: [opacity]\n      }],\n      /**\n       * Mix Blend Mode\n       * @see https://tailwindcss.com/docs/mix-blend-mode\n       */\n      'mix-blend': [{\n        'mix-blend': getBlendModes()\n      }],\n      /**\n       * Background Blend Mode\n       * @see https://tailwindcss.com/docs/background-blend-mode\n       */\n      'bg-blend': [{\n        'bg-blend': getBlendModes()\n      }],\n      // Filters\n      /**\n       * Filter\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/filter\n       */\n      filter: [{\n        filter: ['', 'none']\n      }],\n      /**\n       * Blur\n       * @see https://tailwindcss.com/docs/blur\n       */\n      blur: [{\n        blur: [blur]\n      }],\n      /**\n       * Brightness\n       * @see https://tailwindcss.com/docs/brightness\n       */\n      brightness: [{\n        brightness: [brightness]\n      }],\n      /**\n       * Contrast\n       * @see https://tailwindcss.com/docs/contrast\n       */\n      contrast: [{\n        contrast: [contrast]\n      }],\n      /**\n       * Drop Shadow\n       * @see https://tailwindcss.com/docs/drop-shadow\n       */\n      'drop-shadow': [{\n        'drop-shadow': ['', 'none', isTshirtSize, isArbitraryValue]\n      }],\n      /**\n       * Grayscale\n       * @see https://tailwindcss.com/docs/grayscale\n       */\n      grayscale: [{\n        grayscale: [grayscale]\n      }],\n      /**\n       * Hue Rotate\n       * @see https://tailwindcss.com/docs/hue-rotate\n       */\n      'hue-rotate': [{\n        'hue-rotate': [hueRotate]\n      }],\n      /**\n       * Invert\n       * @see https://tailwindcss.com/docs/invert\n       */\n      invert: [{\n        invert: [invert]\n      }],\n      /**\n       * Saturate\n       * @see https://tailwindcss.com/docs/saturate\n       */\n      saturate: [{\n        saturate: [saturate]\n      }],\n      /**\n       * Sepia\n       * @see https://tailwindcss.com/docs/sepia\n       */\n      sepia: [{\n        sepia: [sepia]\n      }],\n      /**\n       * Backdrop Filter\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/backdrop-filter\n       */\n      'backdrop-filter': [{\n        'backdrop-filter': ['', 'none']\n      }],\n      /**\n       * Backdrop Blur\n       * @see https://tailwindcss.com/docs/backdrop-blur\n       */\n      'backdrop-blur': [{\n        'backdrop-blur': [blur]\n      }],\n      /**\n       * Backdrop Brightness\n       * @see https://tailwindcss.com/docs/backdrop-brightness\n       */\n      'backdrop-brightness': [{\n        'backdrop-brightness': [brightness]\n      }],\n      /**\n       * Backdrop Contrast\n       * @see https://tailwindcss.com/docs/backdrop-contrast\n       */\n      'backdrop-contrast': [{\n        'backdrop-contrast': [contrast]\n      }],\n      /**\n       * Backdrop Grayscale\n       * @see https://tailwindcss.com/docs/backdrop-grayscale\n       */\n      'backdrop-grayscale': [{\n        'backdrop-grayscale': [grayscale]\n      }],\n      /**\n       * Backdrop Hue Rotate\n       * @see https://tailwindcss.com/docs/backdrop-hue-rotate\n       */\n      'backdrop-hue-rotate': [{\n        'backdrop-hue-rotate': [hueRotate]\n      }],\n      /**\n       * Backdrop Invert\n       * @see https://tailwindcss.com/docs/backdrop-invert\n       */\n      'backdrop-invert': [{\n        'backdrop-invert': [invert]\n      }],\n      /**\n       * Backdrop Opacity\n       * @see https://tailwindcss.com/docs/backdrop-opacity\n       */\n      'backdrop-opacity': [{\n        'backdrop-opacity': [opacity]\n      }],\n      /**\n       * Backdrop Saturate\n       * @see https://tailwindcss.com/docs/backdrop-saturate\n       */\n      'backdrop-saturate': [{\n        'backdrop-saturate': [saturate]\n      }],\n      /**\n       * Backdrop Sepia\n       * @see https://tailwindcss.com/docs/backdrop-sepia\n       */\n      'backdrop-sepia': [{\n        'backdrop-sepia': [sepia]\n      }],\n      // Tables\n      /**\n       * Border Collapse\n       * @see https://tailwindcss.com/docs/border-collapse\n       */\n      'border-collapse': [{\n        border: ['collapse', 'separate']\n      }],\n      /**\n       * Border Spacing\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing': [{\n        'border-spacing': [borderSpacing]\n      }],\n      /**\n       * Border Spacing X\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing-x': [{\n        'border-spacing-x': [borderSpacing]\n      }],\n      /**\n       * Border Spacing Y\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing-y': [{\n        'border-spacing-y': [borderSpacing]\n      }],\n      /**\n       * Table Layout\n       * @see https://tailwindcss.com/docs/table-layout\n       */\n      'table-layout': [{\n        table: ['auto', 'fixed']\n      }],\n      /**\n       * Caption Side\n       * @see https://tailwindcss.com/docs/caption-side\n       */\n      caption: [{\n        caption: ['top', 'bottom']\n      }],\n      // Transitions and Animation\n      /**\n       * Tranisition Property\n       * @see https://tailwindcss.com/docs/transition-property\n       */\n      transition: [{\n        transition: ['none', 'all', '', 'colors', 'opacity', 'shadow', 'transform', isArbitraryValue]\n      }],\n      /**\n       * Transition Duration\n       * @see https://tailwindcss.com/docs/transition-duration\n       */\n      duration: [{\n        duration: getNumberAndArbitrary()\n      }],\n      /**\n       * Transition Timing Function\n       * @see https://tailwindcss.com/docs/transition-timing-function\n       */\n      ease: [{\n        ease: ['linear', 'in', 'out', 'in-out', isArbitraryValue]\n      }],\n      /**\n       * Transition Delay\n       * @see https://tailwindcss.com/docs/transition-delay\n       */\n      delay: [{\n        delay: getNumberAndArbitrary()\n      }],\n      /**\n       * Animation\n       * @see https://tailwindcss.com/docs/animation\n       */\n      animate: [{\n        animate: ['none', 'spin', 'ping', 'pulse', 'bounce', isArbitraryValue]\n      }],\n      // Transforms\n      /**\n       * Transform\n       * @see https://tailwindcss.com/docs/transform\n       */\n      transform: [{\n        transform: ['', 'gpu', 'none']\n      }],\n      /**\n       * Scale\n       * @see https://tailwindcss.com/docs/scale\n       */\n      scale: [{\n        scale: [scale]\n      }],\n      /**\n       * Scale X\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-x': [{\n        'scale-x': [scale]\n      }],\n      /**\n       * Scale Y\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-y': [{\n        'scale-y': [scale]\n      }],\n      /**\n       * Rotate\n       * @see https://tailwindcss.com/docs/rotate\n       */\n      rotate: [{\n        rotate: [isInteger, isArbitraryValue]\n      }],\n      /**\n       * Translate X\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-x': [{\n        'translate-x': [translate]\n      }],\n      /**\n       * Translate Y\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-y': [{\n        'translate-y': [translate]\n      }],\n      /**\n       * Skew X\n       * @see https://tailwindcss.com/docs/skew\n       */\n      'skew-x': [{\n        'skew-x': [skew]\n      }],\n      /**\n       * Skew Y\n       * @see https://tailwindcss.com/docs/skew\n       */\n      'skew-y': [{\n        'skew-y': [skew]\n      }],\n      /**\n       * Transform Origin\n       * @see https://tailwindcss.com/docs/transform-origin\n       */\n      'transform-origin': [{\n        origin: ['center', 'top', 'top-right', 'right', 'bottom-right', 'bottom', 'bottom-left', 'left', 'top-left', isArbitraryValue]\n      }],\n      // Interactivity\n      /**\n       * Accent Color\n       * @see https://tailwindcss.com/docs/accent-color\n       */\n      accent: [{\n        accent: ['auto', colors]\n      }],\n      /**\n       * Appearance\n       * @see https://tailwindcss.com/docs/appearance\n       */\n      appearance: [{\n        appearance: ['none', 'auto']\n      }],\n      /**\n       * Cursor\n       * @see https://tailwindcss.com/docs/cursor\n       */\n      cursor: [{\n        cursor: ['auto', 'default', 'pointer', 'wait', 'text', 'move', 'help', 'not-allowed', 'none', 'context-menu', 'progress', 'cell', 'crosshair', 'vertical-text', 'alias', 'copy', 'no-drop', 'grab', 'grabbing', 'all-scroll', 'col-resize', 'row-resize', 'n-resize', 'e-resize', 's-resize', 'w-resize', 'ne-resize', 'nw-resize', 'se-resize', 'sw-resize', 'ew-resize', 'ns-resize', 'nesw-resize', 'nwse-resize', 'zoom-in', 'zoom-out', isArbitraryValue]\n      }],\n      /**\n       * Caret Color\n       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\n       */\n      'caret-color': [{\n        caret: [colors]\n      }],\n      /**\n       * Pointer Events\n       * @see https://tailwindcss.com/docs/pointer-events\n       */\n      'pointer-events': [{\n        'pointer-events': ['none', 'auto']\n      }],\n      /**\n       * Resize\n       * @see https://tailwindcss.com/docs/resize\n       */\n      resize: [{\n        resize: ['none', 'y', 'x', '']\n      }],\n      /**\n       * Scroll Behavior\n       * @see https://tailwindcss.com/docs/scroll-behavior\n       */\n      'scroll-behavior': [{\n        scroll: ['auto', 'smooth']\n      }],\n      /**\n       * Scroll Margin\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-m': [{\n        'scroll-m': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin X\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mx': [{\n        'scroll-mx': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Y\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-my': [{\n        'scroll-my': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Start\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-ms': [{\n        'scroll-ms': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin End\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-me': [{\n        'scroll-me': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Top\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mt': [{\n        'scroll-mt': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Right\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mr': [{\n        'scroll-mr': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Bottom\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mb': [{\n        'scroll-mb': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Left\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-ml': [{\n        'scroll-ml': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-p': [{\n        'scroll-p': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding X\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-px': [{\n        'scroll-px': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Y\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-py': [{\n        'scroll-py': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Start\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-ps': [{\n        'scroll-ps': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding End\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pe': [{\n        'scroll-pe': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Top\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pt': [{\n        'scroll-pt': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Right\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pr': [{\n        'scroll-pr': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Bottom\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pb': [{\n        'scroll-pb': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Left\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pl': [{\n        'scroll-pl': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Snap Align\n       * @see https://tailwindcss.com/docs/scroll-snap-align\n       */\n      'snap-align': [{\n        snap: ['start', 'end', 'center', 'align-none']\n      }],\n      /**\n       * Scroll Snap Stop\n       * @see https://tailwindcss.com/docs/scroll-snap-stop\n       */\n      'snap-stop': [{\n        snap: ['normal', 'always']\n      }],\n      /**\n       * Scroll Snap Type\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */\n      'snap-type': [{\n        snap: ['none', 'x', 'y', 'both']\n      }],\n      /**\n       * Scroll Snap Type Strictness\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */\n      'snap-strictness': [{\n        snap: ['mandatory', 'proximity']\n      }],\n      /**\n       * Touch Action\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      touch: [{\n        touch: ['auto', 'none', 'manipulation']\n      }],\n      /**\n       * Touch Action X\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-x': [{\n        'touch-pan': ['x', 'left', 'right']\n      }],\n      /**\n       * Touch Action Y\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-y': [{\n        'touch-pan': ['y', 'up', 'down']\n      }],\n      /**\n       * Touch Action Pinch Zoom\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-pz': ['touch-pinch-zoom'],\n      /**\n       * User Select\n       * @see https://tailwindcss.com/docs/user-select\n       */\n      select: [{\n        select: ['none', 'text', 'all', 'auto']\n      }],\n      /**\n       * Will Change\n       * @see https://tailwindcss.com/docs/will-change\n       */\n      'will-change': [{\n        'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryValue]\n      }],\n      // SVG\n      /**\n       * Fill\n       * @see https://tailwindcss.com/docs/fill\n       */\n      fill: [{\n        fill: [colors, 'none']\n      }],\n      /**\n       * Stroke Width\n       * @see https://tailwindcss.com/docs/stroke-width\n       */\n      'stroke-w': [{\n        stroke: [isLength, isArbitraryLength, isArbitraryNumber]\n      }],\n      /**\n       * Stroke\n       * @see https://tailwindcss.com/docs/stroke\n       */\n      stroke: [{\n        stroke: [colors, 'none']\n      }],\n      // Accessibility\n      /**\n       * Screen Readers\n       * @see https://tailwindcss.com/docs/screen-readers\n       */\n      sr: ['sr-only', 'not-sr-only'],\n      /**\n       * Forced Color Adjust\n       * @see https://tailwindcss.com/docs/forced-color-adjust\n       */\n      'forced-color-adjust': [{\n        'forced-color-adjust': ['auto', 'none']\n      }]\n    },\n    conflictingClassGroups: {\n      overflow: ['overflow-x', 'overflow-y'],\n      overscroll: ['overscroll-x', 'overscroll-y'],\n      inset: ['inset-x', 'inset-y', 'start', 'end', 'top', 'right', 'bottom', 'left'],\n      'inset-x': ['right', 'left'],\n      'inset-y': ['top', 'bottom'],\n      flex: ['basis', 'grow', 'shrink'],\n      gap: ['gap-x', 'gap-y'],\n      p: ['px', 'py', 'ps', 'pe', 'pt', 'pr', 'pb', 'pl'],\n      px: ['pr', 'pl'],\n      py: ['pt', 'pb'],\n      m: ['mx', 'my', 'ms', 'me', 'mt', 'mr', 'mb', 'ml'],\n      mx: ['mr', 'ml'],\n      my: ['mt', 'mb'],\n      size: ['w', 'h'],\n      'font-size': ['leading'],\n      'fvn-normal': ['fvn-ordinal', 'fvn-slashed-zero', 'fvn-figure', 'fvn-spacing', 'fvn-fraction'],\n      'fvn-ordinal': ['fvn-normal'],\n      'fvn-slashed-zero': ['fvn-normal'],\n      'fvn-figure': ['fvn-normal'],\n      'fvn-spacing': ['fvn-normal'],\n      'fvn-fraction': ['fvn-normal'],\n      'line-clamp': ['display', 'overflow'],\n      rounded: ['rounded-s', 'rounded-e', 'rounded-t', 'rounded-r', 'rounded-b', 'rounded-l', 'rounded-ss', 'rounded-se', 'rounded-ee', 'rounded-es', 'rounded-tl', 'rounded-tr', 'rounded-br', 'rounded-bl'],\n      'rounded-s': ['rounded-ss', 'rounded-es'],\n      'rounded-e': ['rounded-se', 'rounded-ee'],\n      'rounded-t': ['rounded-tl', 'rounded-tr'],\n      'rounded-r': ['rounded-tr', 'rounded-br'],\n      'rounded-b': ['rounded-br', 'rounded-bl'],\n      'rounded-l': ['rounded-tl', 'rounded-bl'],\n      'border-spacing': ['border-spacing-x', 'border-spacing-y'],\n      'border-w': ['border-w-s', 'border-w-e', 'border-w-t', 'border-w-r', 'border-w-b', 'border-w-l'],\n      'border-w-x': ['border-w-r', 'border-w-l'],\n      'border-w-y': ['border-w-t', 'border-w-b'],\n      'border-color': ['border-color-t', 'border-color-r', 'border-color-b', 'border-color-l'],\n      'border-color-x': ['border-color-r', 'border-color-l'],\n      'border-color-y': ['border-color-t', 'border-color-b'],\n      'scroll-m': ['scroll-mx', 'scroll-my', 'scroll-ms', 'scroll-me', 'scroll-mt', 'scroll-mr', 'scroll-mb', 'scroll-ml'],\n      'scroll-mx': ['scroll-mr', 'scroll-ml'],\n      'scroll-my': ['scroll-mt', 'scroll-mb'],\n      'scroll-p': ['scroll-px', 'scroll-py', 'scroll-ps', 'scroll-pe', 'scroll-pt', 'scroll-pr', 'scroll-pb', 'scroll-pl'],\n      'scroll-px': ['scroll-pr', 'scroll-pl'],\n      'scroll-py': ['scroll-pt', 'scroll-pb'],\n      touch: ['touch-x', 'touch-y', 'touch-pz'],\n      'touch-x': ['touch'],\n      'touch-y': ['touch'],\n      'touch-pz': ['touch']\n    },\n    conflictingClassGroupModifiers: {\n      'font-size': ['leading']\n    }\n  };\n}\n\n/**\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\n * @param configExtension Partial config to merge into the `baseConfig`.\n */\nfunction mergeConfigs(baseConfig, {\n  cacheSize,\n  prefix,\n  separator,\n  extend = {},\n  override = {}\n}) {\n  overrideProperty(baseConfig, 'cacheSize', cacheSize);\n  overrideProperty(baseConfig, 'prefix', prefix);\n  overrideProperty(baseConfig, 'separator', separator);\n  for (const configKey in override) {\n    overrideConfigProperties(baseConfig[configKey], override[configKey]);\n  }\n  for (const key in extend) {\n    mergeConfigProperties(baseConfig[key], extend[key]);\n  }\n  return baseConfig;\n}\nfunction overrideProperty(baseObject, overrideKey, overrideValue) {\n  if (overrideValue !== undefined) {\n    baseObject[overrideKey] = overrideValue;\n  }\n}\nfunction overrideConfigProperties(baseObject, overrideObject) {\n  if (overrideObject) {\n    for (const key in overrideObject) {\n      overrideProperty(baseObject, key, overrideObject[key]);\n    }\n  }\n}\nfunction mergeConfigProperties(baseObject, mergeObject) {\n  if (mergeObject) {\n    for (const key in mergeObject) {\n      const mergeValue = mergeObject[key];\n      if (mergeValue !== undefined) {\n        baseObject[key] = (baseObject[key] || []).concat(mergeValue);\n      }\n    }\n  }\n}\nfunction extendTailwindMerge(configExtension, ...createConfig) {\n  return typeof configExtension === 'function' ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig) : createTailwindMerge(() => mergeConfigs(getDefaultConfig(), configExtension), ...createConfig);\n}\nconst twMerge = /*#__PURE__*/createTailwindMerge(getDefaultConfig);\nexport { createTailwindMerge, extendTailwindMerge, fromTheme, getDefaultConfig, mergeConfigs, twJoin, twMerge, validators };","map":{"version":3,"names":["CLASS_PART_SEPARATOR","createClassUtils","config","classMap","createClassMap","conflictingClassGroups","conflictingClassGroupModifiers","getClassGroupId","className","classParts","split","length","shift","getGroupRecursive","getGroupIdForArbitraryProperty","getConflictingClassGroupIds","classGroupId","hasPostfixModifier","conflicts","classPartObject","currentClassPart","nextClassPartObject","nextPart","get","classGroupFromNextClassPart","slice","undefined","validators","classRest","join","find","validator","arbitraryPropertyRegex","test","arbitraryPropertyClassName","exec","property","substring","indexOf","theme","prefix","Map","prefixedClassGroupEntries","getPrefixedClassGroupEntries","Object","entries","classGroups","forEach","classGroup","processClassesRecursively","classDefinition","classPartObjectToEdit","getPart","isThemeGetter","push","key","path","currentClassPartObject","pathPart","has","set","func","classGroupEntries","map","prefixedClassGroup","fromEntries","value","createLruCache","maxCacheSize","cacheSize","cache","previousCache","update","IMPORTANT_MODIFIER","createSplitModifiers","separator","isSeparatorSingleCharacter","firstSeparatorCharacter","separatorLength","splitModifiers","modifiers","bracketDepth","modifierStart","postfixModifierPosition","index","currentCharacter","baseClassNameWithImportantModifier","hasImportantModifier","startsWith","baseClassName","maybePostfixModifierPosition","sortModifiers","sortedModifiers","unsortedModifiers","modifier","isArbitraryVariant","sort","createConfigUtils","SPLIT_CLASSES_REGEX","mergeClassList","classList","configUtils","classGroupsInConflict","Set","trim","originalClassName","Boolean","isTailwindClass","variantModifier","modifierId","reverse","filter","parsed","classId","add","group","twJoin","argument","resolvedValue","string","arguments","toValue","mix","k","createTailwindMerge","createConfigFirst","createConfigRest","cacheGet","cacheSet","functionToCall","initTailwindMerge","reduce","previousConfig","createConfigCurrent","tailwindMerge","cachedResult","result","callTailwindMerge","apply","fromTheme","themeGetter","arbitraryValueRegex","fractionRegex","stringLengths","tshirtUnitRegex","lengthUnitRegex","colorFunctionRegex","shadowRegex","imageRegex","isLength","isNumber","isArbitraryLength","getIsArbitraryValue","isLengthOnly","Number","isNaN","isArbitraryNumber","isInteger","isPercent","endsWith","isArbitraryValue","isTshirtSize","sizeLabels","isArbitrarySize","isNever","isArbitraryPosition","imageLabels","isArbitraryImage","isImage","isArbitraryShadow","isShadow","isAny","label","testValue","getDefaultConfig","colors","spacing","blur","brightness","borderColor","borderRadius","borderSpacing","borderWidth","contrast","grayscale","hueRotate","invert","gap","gradientColorStops","gradientColorStopPositions","inset","margin","opacity","padding","saturate","scale","sepia","skew","space","translate","getOverscroll","getOverflow","getSpacingWithAutoAndArbitrary","getSpacingWithArbitrary","getLengthWithEmptyAndArbitrary","getNumberWithAutoAndArbitrary","getPositions","getLineStyles","getBlendModes","getAlign","getZeroAndEmpty","getBreaks","getNumber","getNumberAndArbitrary","aspect","container","columns","box","display","float","clear","isolation","object","overflow","overscroll","position","start","end","top","right","bottom","left","visibility","z","basis","flex","grow","shrink","order","col","span","row","justify","content","items","self","p","px","py","ps","pe","pt","pr","pb","pl","m","mx","my","ms","me","mt","mr","mb","ml","w","screen","h","size","text","font","tracking","leading","list","placeholder","decoration","indent","align","whitespace","break","hyphens","bg","repeat","from","via","to","rounded","border","divide","outline","ring","shadow","table","caption","transition","duration","ease","delay","animate","transform","rotate","origin","accent","appearance","cursor","caret","resize","scroll","snap","touch","select","fill","stroke","sr","mergeConfigs","baseConfig","extend","override","overrideProperty","configKey","overrideConfigProperties","mergeConfigProperties","baseObject","overrideKey","overrideValue","overrideObject","mergeObject","mergeValue","concat","extendTailwindMerge","configExtension","createConfig","twMerge"],"sources":["/Users/whitneywaldinger/capstone-repo/acep-energy-llm/Frontend/node_modules/tailwind-merge/src/lib/class-utils.ts","/Users/whitneywaldinger/capstone-repo/acep-energy-llm/Frontend/node_modules/tailwind-merge/src/lib/lru-cache.ts","/Users/whitneywaldinger/capstone-repo/acep-energy-llm/Frontend/node_modules/tailwind-merge/src/lib/modifier-utils.ts","/Users/whitneywaldinger/capstone-repo/acep-energy-llm/Frontend/node_modules/tailwind-merge/src/lib/config-utils.ts","/Users/whitneywaldinger/capstone-repo/acep-energy-llm/Frontend/node_modules/tailwind-merge/src/lib/merge-classlist.ts","/Users/whitneywaldinger/capstone-repo/acep-energy-llm/Frontend/node_modules/tailwind-merge/src/lib/tw-join.ts","/Users/whitneywaldinger/capstone-repo/acep-energy-llm/Frontend/node_modules/tailwind-merge/src/lib/create-tailwind-merge.ts","/Users/whitneywaldinger/capstone-repo/acep-energy-llm/Frontend/node_modules/tailwind-merge/src/lib/from-theme.ts","/Users/whitneywaldinger/capstone-repo/acep-energy-llm/Frontend/node_modules/tailwind-merge/src/lib/validators.ts","/Users/whitneywaldinger/capstone-repo/acep-energy-llm/Frontend/node_modules/tailwind-merge/src/lib/default-config.ts","/Users/whitneywaldinger/capstone-repo/acep-energy-llm/Frontend/node_modules/tailwind-merge/src/lib/merge-configs.ts","/Users/whitneywaldinger/capstone-repo/acep-energy-llm/Frontend/node_modules/tailwind-merge/src/lib/extend-tailwind-merge.ts","/Users/whitneywaldinger/capstone-repo/acep-energy-llm/Frontend/node_modules/tailwind-merge/src/lib/tw-merge.ts"],"sourcesContent":["import {\n    ClassGroup,\n    ClassValidator,\n    Config,\n    GenericClassGroupIds,\n    GenericConfig,\n    GenericThemeGroupIds,\n    ThemeGetter,\n    ThemeObject,\n} from './types'\n\nexport interface ClassPartObject {\n    nextPart: Map<string, ClassPartObject>\n    validators: ClassValidatorObject[]\n    classGroupId?: GenericClassGroupIds\n}\n\ninterface ClassValidatorObject {\n    classGroupId: GenericClassGroupIds\n    validator: ClassValidator\n}\n\nconst CLASS_PART_SEPARATOR = '-'\n\nexport function createClassUtils(config: GenericConfig) {\n    const classMap = createClassMap(config)\n    const { conflictingClassGroups, conflictingClassGroupModifiers } = config\n\n    function getClassGroupId(className: string) {\n        const classParts = className.split(CLASS_PART_SEPARATOR)\n\n        // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n        if (classParts[0] === '' && classParts.length !== 1) {\n            classParts.shift()\n        }\n\n        return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className)\n    }\n\n    function getConflictingClassGroupIds(\n        classGroupId: GenericClassGroupIds,\n        hasPostfixModifier: boolean,\n    ) {\n        const conflicts = conflictingClassGroups[classGroupId] || []\n\n        if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\n            return [...conflicts, ...conflictingClassGroupModifiers[classGroupId]!]\n        }\n\n        return conflicts\n    }\n\n    return {\n        getClassGroupId,\n        getConflictingClassGroupIds,\n    }\n}\n\nfunction getGroupRecursive(\n    classParts: string[],\n    classPartObject: ClassPartObject,\n): GenericClassGroupIds | undefined {\n    if (classParts.length === 0) {\n        return classPartObject.classGroupId\n    }\n\n    const currentClassPart = classParts[0]!\n    const nextClassPartObject = classPartObject.nextPart.get(currentClassPart)\n    const classGroupFromNextClassPart = nextClassPartObject\n        ? getGroupRecursive(classParts.slice(1), nextClassPartObject)\n        : undefined\n\n    if (classGroupFromNextClassPart) {\n        return classGroupFromNextClassPart\n    }\n\n    if (classPartObject.validators.length === 0) {\n        return undefined\n    }\n\n    const classRest = classParts.join(CLASS_PART_SEPARATOR)\n\n    return classPartObject.validators.find(({ validator }) => validator(classRest))?.classGroupId\n}\n\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/\n\nfunction getGroupIdForArbitraryProperty(className: string) {\n    if (arbitraryPropertyRegex.test(className)) {\n        const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)![1]\n        const property = arbitraryPropertyClassName?.substring(\n            0,\n            arbitraryPropertyClassName.indexOf(':'),\n        )\n\n        if (property) {\n            // I use two dots here because one dot is used as prefix for class groups in plugins\n            return 'arbitrary..' + property\n        }\n    }\n}\n\n/**\n * Exported for testing only\n */\nexport function createClassMap(config: Config<GenericClassGroupIds, GenericThemeGroupIds>) {\n    const { theme, prefix } = config\n    const classMap: ClassPartObject = {\n        nextPart: new Map<string, ClassPartObject>(),\n        validators: [],\n    }\n\n    const prefixedClassGroupEntries = getPrefixedClassGroupEntries(\n        Object.entries(config.classGroups),\n        prefix,\n    )\n\n    prefixedClassGroupEntries.forEach(([classGroupId, classGroup]) => {\n        processClassesRecursively(classGroup, classMap, classGroupId, theme)\n    })\n\n    return classMap\n}\n\nfunction processClassesRecursively(\n    classGroup: ClassGroup<GenericThemeGroupIds>,\n    classPartObject: ClassPartObject,\n    classGroupId: GenericClassGroupIds,\n    theme: ThemeObject<GenericThemeGroupIds>,\n) {\n    classGroup.forEach((classDefinition) => {\n        if (typeof classDefinition === 'string') {\n            const classPartObjectToEdit =\n                classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition)\n            classPartObjectToEdit.classGroupId = classGroupId\n            return\n        }\n\n        if (typeof classDefinition === 'function') {\n            if (isThemeGetter(classDefinition)) {\n                processClassesRecursively(\n                    classDefinition(theme),\n                    classPartObject,\n                    classGroupId,\n                    theme,\n                )\n                return\n            }\n\n            classPartObject.validators.push({\n                validator: classDefinition,\n                classGroupId,\n            })\n\n            return\n        }\n\n        Object.entries(classDefinition).forEach(([key, classGroup]) => {\n            processClassesRecursively(\n                classGroup,\n                getPart(classPartObject, key),\n                classGroupId,\n                theme,\n            )\n        })\n    })\n}\n\nfunction getPart(classPartObject: ClassPartObject, path: string) {\n    let currentClassPartObject = classPartObject\n\n    path.split(CLASS_PART_SEPARATOR).forEach((pathPart) => {\n        if (!currentClassPartObject.nextPart.has(pathPart)) {\n            currentClassPartObject.nextPart.set(pathPart, {\n                nextPart: new Map(),\n                validators: [],\n            })\n        }\n\n        currentClassPartObject = currentClassPartObject.nextPart.get(pathPart)!\n    })\n\n    return currentClassPartObject\n}\n\nfunction isThemeGetter(func: ClassValidator | ThemeGetter): func is ThemeGetter {\n    return (func as ThemeGetter).isThemeGetter\n}\n\nfunction getPrefixedClassGroupEntries(\n    classGroupEntries: Array<[classGroupId: string, classGroup: ClassGroup<GenericThemeGroupIds>]>,\n    prefix: string | undefined,\n): Array<[classGroupId: string, classGroup: ClassGroup<GenericThemeGroupIds>]> {\n    if (!prefix) {\n        return classGroupEntries\n    }\n\n    return classGroupEntries.map(([classGroupId, classGroup]) => {\n        const prefixedClassGroup = classGroup.map((classDefinition) => {\n            if (typeof classDefinition === 'string') {\n                return prefix + classDefinition\n            }\n\n            if (typeof classDefinition === 'object') {\n                return Object.fromEntries(\n                    Object.entries(classDefinition).map(([key, value]) => [prefix + key, value]),\n                )\n            }\n\n            return classDefinition\n        })\n\n        return [classGroupId, prefixedClassGroup]\n    })\n}\n","// Export is needed because TypeScript complains about an error otherwise:\n// Error: …/tailwind-merge/src/config-utils.ts(8,17): semantic error TS4058: Return type of exported function has or is using name 'LruCache' from external module \"…/tailwind-merge/src/lru-cache\" but cannot be named.\nexport interface LruCache<Key, Value> {\n    get(key: Key): Value | undefined\n    set(key: Key, value: Value): void\n}\n\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nexport function createLruCache<Key, Value>(maxCacheSize: number): LruCache<Key, Value> {\n    if (maxCacheSize < 1) {\n        return {\n            get: () => undefined,\n            set: () => {},\n        }\n    }\n\n    let cacheSize = 0\n    let cache = new Map<Key, Value>()\n    let previousCache = new Map<Key, Value>()\n\n    function update(key: Key, value: Value) {\n        cache.set(key, value)\n        cacheSize++\n\n        if (cacheSize > maxCacheSize) {\n            cacheSize = 0\n            previousCache = cache\n            cache = new Map()\n        }\n    }\n\n    return {\n        get(key) {\n            let value = cache.get(key)\n\n            if (value !== undefined) {\n                return value\n            }\n            if ((value = previousCache.get(key)) !== undefined) {\n                update(key, value)\n                return value\n            }\n        },\n        set(key, value) {\n            if (cache.has(key)) {\n                cache.set(key, value)\n            } else {\n                update(key, value)\n            }\n        },\n    }\n}\n","import { GenericConfig } from './types'\n\nexport const IMPORTANT_MODIFIER = '!'\n\nexport function createSplitModifiers(config: GenericConfig) {\n    const separator = config.separator\n    const isSeparatorSingleCharacter = separator.length === 1\n    const firstSeparatorCharacter = separator[0]\n    const separatorLength = separator.length\n\n    // splitModifiers inspired by https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n    return function splitModifiers(className: string) {\n        const modifiers = []\n\n        let bracketDepth = 0\n        let modifierStart = 0\n        let postfixModifierPosition: number | undefined\n\n        for (let index = 0; index < className.length; index++) {\n            let currentCharacter = className[index]\n\n            if (bracketDepth === 0) {\n                if (\n                    currentCharacter === firstSeparatorCharacter &&\n                    (isSeparatorSingleCharacter ||\n                        className.slice(index, index + separatorLength) === separator)\n                ) {\n                    modifiers.push(className.slice(modifierStart, index))\n                    modifierStart = index + separatorLength\n                    continue\n                }\n\n                if (currentCharacter === '/') {\n                    postfixModifierPosition = index\n                    continue\n                }\n            }\n\n            if (currentCharacter === '[') {\n                bracketDepth++\n            } else if (currentCharacter === ']') {\n                bracketDepth--\n            }\n        }\n\n        const baseClassNameWithImportantModifier =\n            modifiers.length === 0 ? className : className.substring(modifierStart)\n        const hasImportantModifier =\n            baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER)\n        const baseClassName = hasImportantModifier\n            ? baseClassNameWithImportantModifier.substring(1)\n            : baseClassNameWithImportantModifier\n\n        const maybePostfixModifierPosition =\n            postfixModifierPosition && postfixModifierPosition > modifierStart\n                ? postfixModifierPosition - modifierStart\n                : undefined\n\n        return {\n            modifiers,\n            hasImportantModifier,\n            baseClassName,\n            maybePostfixModifierPosition,\n        }\n    }\n}\n\n/**\n * Sorts modifiers according to following schema:\n * - Predefined modifiers are sorted alphabetically\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\n */\nexport function sortModifiers(modifiers: string[]) {\n    if (modifiers.length <= 1) {\n        return modifiers\n    }\n\n    const sortedModifiers: string[] = []\n    let unsortedModifiers: string[] = []\n\n    modifiers.forEach((modifier) => {\n        const isArbitraryVariant = modifier[0] === '['\n\n        if (isArbitraryVariant) {\n            sortedModifiers.push(...unsortedModifiers.sort(), modifier)\n            unsortedModifiers = []\n        } else {\n            unsortedModifiers.push(modifier)\n        }\n    })\n\n    sortedModifiers.push(...unsortedModifiers.sort())\n\n    return sortedModifiers\n}\n","import { createClassUtils } from './class-utils'\nimport { createLruCache } from './lru-cache'\nimport { createSplitModifiers } from './modifier-utils'\nimport { GenericConfig } from './types'\n\nexport type ConfigUtils = ReturnType<typeof createConfigUtils>\n\nexport function createConfigUtils(config: GenericConfig) {\n    return {\n        cache: createLruCache<string, string>(config.cacheSize),\n        splitModifiers: createSplitModifiers(config),\n        ...createClassUtils(config),\n    }\n}\n","import { ConfigUtils } from './config-utils'\nimport { IMPORTANT_MODIFIER, sortModifiers } from './modifier-utils'\n\nconst SPLIT_CLASSES_REGEX = /\\s+/\n\nexport function mergeClassList(classList: string, configUtils: ConfigUtils) {\n    const { splitModifiers, getClassGroupId, getConflictingClassGroupIds } = configUtils\n\n    /**\n     * Set of classGroupIds in following format:\n     * `{importantModifier}{variantModifiers}{classGroupId}`\n     * @example 'float'\n     * @example 'hover:focus:bg-color'\n     * @example 'md:!pr'\n     */\n    const classGroupsInConflict = new Set<string>()\n\n    return (\n        classList\n            .trim()\n            .split(SPLIT_CLASSES_REGEX)\n            .map((originalClassName) => {\n                const {\n                    modifiers,\n                    hasImportantModifier,\n                    baseClassName,\n                    maybePostfixModifierPosition,\n                } = splitModifiers(originalClassName)\n\n                let classGroupId = getClassGroupId(\n                    maybePostfixModifierPosition\n                        ? baseClassName.substring(0, maybePostfixModifierPosition)\n                        : baseClassName,\n                )\n\n                let hasPostfixModifier = Boolean(maybePostfixModifierPosition)\n\n                if (!classGroupId) {\n                    if (!maybePostfixModifierPosition) {\n                        return {\n                            isTailwindClass: false as const,\n                            originalClassName,\n                        }\n                    }\n\n                    classGroupId = getClassGroupId(baseClassName)\n\n                    if (!classGroupId) {\n                        return {\n                            isTailwindClass: false as const,\n                            originalClassName,\n                        }\n                    }\n\n                    hasPostfixModifier = false\n                }\n\n                const variantModifier = sortModifiers(modifiers).join(':')\n\n                const modifierId = hasImportantModifier\n                    ? variantModifier + IMPORTANT_MODIFIER\n                    : variantModifier\n\n                return {\n                    isTailwindClass: true as const,\n                    modifierId,\n                    classGroupId,\n                    originalClassName,\n                    hasPostfixModifier,\n                }\n            })\n            .reverse()\n            // Last class in conflict wins, so we need to filter conflicting classes in reverse order.\n            .filter((parsed) => {\n                if (!parsed.isTailwindClass) {\n                    return true\n                }\n\n                const { modifierId, classGroupId, hasPostfixModifier } = parsed\n\n                const classId = modifierId + classGroupId\n\n                if (classGroupsInConflict.has(classId)) {\n                    return false\n                }\n\n                classGroupsInConflict.add(classId)\n\n                getConflictingClassGroupIds(classGroupId, hasPostfixModifier).forEach((group) =>\n                    classGroupsInConflict.add(modifierId + group),\n                )\n\n                return true\n            })\n            .reverse()\n            .map((parsed) => parsed.originalClassName)\n            .join(' ')\n    )\n}\n","/**\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\n *\n * Specifically:\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\n *\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n */\n\nexport type ClassNameValue = ClassNameArray | string | null | undefined | 0 | false\ntype ClassNameArray = ClassNameValue[]\n\nexport function twJoin(...classLists: ClassNameValue[]): string\nexport function twJoin() {\n    let index = 0\n    let argument: ClassNameValue\n    let resolvedValue: string\n    let string = ''\n\n    while (index < arguments.length) {\n        if ((argument = arguments[index++])) {\n            if ((resolvedValue = toValue(argument))) {\n                string && (string += ' ')\n                string += resolvedValue\n            }\n        }\n    }\n    return string\n}\n\nfunction toValue(mix: ClassNameArray | string) {\n    if (typeof mix === 'string') {\n        return mix\n    }\n\n    let resolvedValue: string\n    let string = ''\n\n    for (let k = 0; k < mix.length; k++) {\n        if (mix[k]) {\n            if ((resolvedValue = toValue(mix[k] as ClassNameArray | string))) {\n                string && (string += ' ')\n                string += resolvedValue\n            }\n        }\n    }\n\n    return string\n}\n","import { createConfigUtils } from './config-utils'\nimport { mergeClassList } from './merge-classlist'\nimport { ClassNameValue, twJoin } from './tw-join'\nimport { GenericConfig } from './types'\n\ntype CreateConfigFirst = () => GenericConfig\ntype CreateConfigSubsequent = (config: GenericConfig) => GenericConfig\ntype TailwindMerge = (...classLists: ClassNameValue[]) => string\ntype ConfigUtils = ReturnType<typeof createConfigUtils>\n\nexport function createTailwindMerge(\n    createConfigFirst: CreateConfigFirst,\n    ...createConfigRest: CreateConfigSubsequent[]\n): TailwindMerge {\n    let configUtils: ConfigUtils\n    let cacheGet: ConfigUtils['cache']['get']\n    let cacheSet: ConfigUtils['cache']['set']\n    let functionToCall = initTailwindMerge\n\n    function initTailwindMerge(classList: string) {\n        const config = createConfigRest.reduce(\n            (previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig),\n            createConfigFirst() as GenericConfig,\n        )\n\n        configUtils = createConfigUtils(config)\n        cacheGet = configUtils.cache.get\n        cacheSet = configUtils.cache.set\n        functionToCall = tailwindMerge\n\n        return tailwindMerge(classList)\n    }\n\n    function tailwindMerge(classList: string) {\n        const cachedResult = cacheGet(classList)\n\n        if (cachedResult) {\n            return cachedResult\n        }\n\n        const result = mergeClassList(classList, configUtils)\n        cacheSet(classList, result)\n\n        return result\n    }\n\n    return function callTailwindMerge() {\n        return functionToCall(twJoin.apply(null, arguments as any))\n    }\n}\n","import { DefaultThemeGroupIds, NoInfer, ThemeGetter, ThemeObject } from './types'\n\nexport function fromTheme<\n    AdditionalThemeGroupIds extends string = never,\n    DefaultThemeGroupIdsInner extends string = DefaultThemeGroupIds,\n>(key: NoInfer<DefaultThemeGroupIdsInner | AdditionalThemeGroupIds>): ThemeGetter {\n    const themeGetter = (theme: ThemeObject<DefaultThemeGroupIdsInner | AdditionalThemeGroupIds>) =>\n        theme[key] || []\n\n    themeGetter.isThemeGetter = true as const\n\n    return themeGetter\n}\n","const arbitraryValueRegex = /^\\[(?:([a-z-]+):)?(.+)\\]$/i\nconst fractionRegex = /^\\d+\\/\\d+$/\nconst stringLengths = new Set(['px', 'full', 'screen'])\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/\nconst lengthUnitRegex =\n    /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/\nconst colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\\(.+\\)$/\n// Shadow always begins with x and y offset separated by underscore optionally prepended by inset\nconst shadowRegex = /^(inset_)?-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/\nconst imageRegex =\n    /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\\(.+\\)$/\n\nexport function isLength(value: string) {\n    return isNumber(value) || stringLengths.has(value) || fractionRegex.test(value)\n}\n\nexport function isArbitraryLength(value: string) {\n    return getIsArbitraryValue(value, 'length', isLengthOnly)\n}\n\nexport function isNumber(value: string) {\n    return Boolean(value) && !Number.isNaN(Number(value))\n}\n\nexport function isArbitraryNumber(value: string) {\n    return getIsArbitraryValue(value, 'number', isNumber)\n}\n\nexport function isInteger(value: string) {\n    return Boolean(value) && Number.isInteger(Number(value))\n}\n\nexport function isPercent(value: string) {\n    return value.endsWith('%') && isNumber(value.slice(0, -1))\n}\n\nexport function isArbitraryValue(value: string) {\n    return arbitraryValueRegex.test(value)\n}\n\nexport function isTshirtSize(value: string) {\n    return tshirtUnitRegex.test(value)\n}\n\nconst sizeLabels = new Set(['length', 'size', 'percentage'])\n\nexport function isArbitrarySize(value: string) {\n    return getIsArbitraryValue(value, sizeLabels, isNever)\n}\n\nexport function isArbitraryPosition(value: string) {\n    return getIsArbitraryValue(value, 'position', isNever)\n}\n\nconst imageLabels = new Set(['image', 'url'])\n\nexport function isArbitraryImage(value: string) {\n    return getIsArbitraryValue(value, imageLabels, isImage)\n}\n\nexport function isArbitraryShadow(value: string) {\n    return getIsArbitraryValue(value, '', isShadow)\n}\n\nexport function isAny() {\n    return true\n}\n\nfunction getIsArbitraryValue(\n    value: string,\n    label: string | Set<string>,\n    testValue: (value: string) => boolean,\n) {\n    const result = arbitraryValueRegex.exec(value)\n\n    if (result) {\n        if (result[1]) {\n            return typeof label === 'string' ? result[1] === label : label.has(result[1])\n        }\n\n        return testValue(result[2]!)\n    }\n\n    return false\n}\n\nfunction isLengthOnly(value: string) {\n    // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.\n    // For example, `hsl(0 0% 0%)` would be classified as a length without this check.\n    // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.\n    return lengthUnitRegex.test(value) && !colorFunctionRegex.test(value)\n}\n\nfunction isNever() {\n    return false\n}\n\nfunction isShadow(value: string) {\n    return shadowRegex.test(value)\n}\n\nfunction isImage(value: string) {\n    return imageRegex.test(value)\n}\n","import { fromTheme } from './from-theme'\nimport { Config, DefaultClassGroupIds, DefaultThemeGroupIds } from './types'\nimport {\n    isAny,\n    isArbitraryImage,\n    isArbitraryLength,\n    isArbitraryNumber,\n    isArbitraryPosition,\n    isArbitraryShadow,\n    isArbitrarySize,\n    isArbitraryValue,\n    isInteger,\n    isLength,\n    isNumber,\n    isPercent,\n    isTshirtSize,\n} from './validators'\n\nexport function getDefaultConfig() {\n    const colors = fromTheme('colors')\n    const spacing = fromTheme('spacing')\n    const blur = fromTheme('blur')\n    const brightness = fromTheme('brightness')\n    const borderColor = fromTheme('borderColor')\n    const borderRadius = fromTheme('borderRadius')\n    const borderSpacing = fromTheme('borderSpacing')\n    const borderWidth = fromTheme('borderWidth')\n    const contrast = fromTheme('contrast')\n    const grayscale = fromTheme('grayscale')\n    const hueRotate = fromTheme('hueRotate')\n    const invert = fromTheme('invert')\n    const gap = fromTheme('gap')\n    const gradientColorStops = fromTheme('gradientColorStops')\n    const gradientColorStopPositions = fromTheme('gradientColorStopPositions')\n    const inset = fromTheme('inset')\n    const margin = fromTheme('margin')\n    const opacity = fromTheme('opacity')\n    const padding = fromTheme('padding')\n    const saturate = fromTheme('saturate')\n    const scale = fromTheme('scale')\n    const sepia = fromTheme('sepia')\n    const skew = fromTheme('skew')\n    const space = fromTheme('space')\n    const translate = fromTheme('translate')\n\n    const getOverscroll = () => ['auto', 'contain', 'none'] as const\n    const getOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'] as const\n    const getSpacingWithAutoAndArbitrary = () => ['auto', isArbitraryValue, spacing] as const\n    const getSpacingWithArbitrary = () => [isArbitraryValue, spacing] as const\n    const getLengthWithEmptyAndArbitrary = () => ['', isLength, isArbitraryLength] as const\n    const getNumberWithAutoAndArbitrary = () => ['auto', isNumber, isArbitraryValue] as const\n    const getPositions = () =>\n        [\n            'bottom',\n            'center',\n            'left',\n            'left-bottom',\n            'left-top',\n            'right',\n            'right-bottom',\n            'right-top',\n            'top',\n        ] as const\n    const getLineStyles = () => ['solid', 'dashed', 'dotted', 'double', 'none'] as const\n    const getBlendModes = () =>\n        [\n            'normal',\n            'multiply',\n            'screen',\n            'overlay',\n            'darken',\n            'lighten',\n            'color-dodge',\n            'color-burn',\n            'hard-light',\n            'soft-light',\n            'difference',\n            'exclusion',\n            'hue',\n            'saturation',\n            'color',\n            'luminosity',\n            'plus-lighter',\n        ] as const\n    const getAlign = () =>\n        ['start', 'end', 'center', 'between', 'around', 'evenly', 'stretch'] as const\n    const getZeroAndEmpty = () => ['', '0', isArbitraryValue] as const\n    const getBreaks = () =>\n        ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'] as const\n    const getNumber = () => [isNumber, isArbitraryNumber]\n    const getNumberAndArbitrary = () => [isNumber, isArbitraryValue]\n\n    return {\n        cacheSize: 500,\n        separator: ':',\n        theme: {\n            colors: [isAny],\n            spacing: [isLength, isArbitraryLength],\n            blur: ['none', '', isTshirtSize, isArbitraryValue],\n            brightness: getNumber(),\n            borderColor: [colors],\n            borderRadius: ['none', '', 'full', isTshirtSize, isArbitraryValue],\n            borderSpacing: getSpacingWithArbitrary(),\n            borderWidth: getLengthWithEmptyAndArbitrary(),\n            contrast: getNumber(),\n            grayscale: getZeroAndEmpty(),\n            hueRotate: getNumberAndArbitrary(),\n            invert: getZeroAndEmpty(),\n            gap: getSpacingWithArbitrary(),\n            gradientColorStops: [colors],\n            gradientColorStopPositions: [isPercent, isArbitraryLength],\n            inset: getSpacingWithAutoAndArbitrary(),\n            margin: getSpacingWithAutoAndArbitrary(),\n            opacity: getNumber(),\n            padding: getSpacingWithArbitrary(),\n            saturate: getNumber(),\n            scale: getNumber(),\n            sepia: getZeroAndEmpty(),\n            skew: getNumberAndArbitrary(),\n            space: getSpacingWithArbitrary(),\n            translate: getSpacingWithArbitrary(),\n        },\n        classGroups: {\n            // Layout\n            /**\n             * Aspect Ratio\n             * @see https://tailwindcss.com/docs/aspect-ratio\n             */\n            aspect: [{ aspect: ['auto', 'square', 'video', isArbitraryValue] }],\n            /**\n             * Container\n             * @see https://tailwindcss.com/docs/container\n             */\n            container: ['container'],\n            /**\n             * Columns\n             * @see https://tailwindcss.com/docs/columns\n             */\n            columns: [{ columns: [isTshirtSize] }],\n            /**\n             * Break After\n             * @see https://tailwindcss.com/docs/break-after\n             */\n            'break-after': [{ 'break-after': getBreaks() }],\n            /**\n             * Break Before\n             * @see https://tailwindcss.com/docs/break-before\n             */\n            'break-before': [{ 'break-before': getBreaks() }],\n            /**\n             * Break Inside\n             * @see https://tailwindcss.com/docs/break-inside\n             */\n            'break-inside': [{ 'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column'] }],\n            /**\n             * Box Decoration Break\n             * @see https://tailwindcss.com/docs/box-decoration-break\n             */\n            'box-decoration': [{ 'box-decoration': ['slice', 'clone'] }],\n            /**\n             * Box Sizing\n             * @see https://tailwindcss.com/docs/box-sizing\n             */\n            box: [{ box: ['border', 'content'] }],\n            /**\n             * Display\n             * @see https://tailwindcss.com/docs/display\n             */\n            display: [\n                'block',\n                'inline-block',\n                'inline',\n                'flex',\n                'inline-flex',\n                'table',\n                'inline-table',\n                'table-caption',\n                'table-cell',\n                'table-column',\n                'table-column-group',\n                'table-footer-group',\n                'table-header-group',\n                'table-row-group',\n                'table-row',\n                'flow-root',\n                'grid',\n                'inline-grid',\n                'contents',\n                'list-item',\n                'hidden',\n            ],\n            /**\n             * Floats\n             * @see https://tailwindcss.com/docs/float\n             */\n            float: [{ float: ['right', 'left', 'none', 'start', 'end'] }],\n            /**\n             * Clear\n             * @see https://tailwindcss.com/docs/clear\n             */\n            clear: [{ clear: ['left', 'right', 'both', 'none', 'start', 'end'] }],\n            /**\n             * Isolation\n             * @see https://tailwindcss.com/docs/isolation\n             */\n            isolation: ['isolate', 'isolation-auto'],\n            /**\n             * Object Fit\n             * @see https://tailwindcss.com/docs/object-fit\n             */\n            'object-fit': [{ object: ['contain', 'cover', 'fill', 'none', 'scale-down'] }],\n            /**\n             * Object Position\n             * @see https://tailwindcss.com/docs/object-position\n             */\n            'object-position': [{ object: [...getPositions(), isArbitraryValue] }],\n            /**\n             * Overflow\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            overflow: [{ overflow: getOverflow() }],\n            /**\n             * Overflow X\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            'overflow-x': [{ 'overflow-x': getOverflow() }],\n            /**\n             * Overflow Y\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            'overflow-y': [{ 'overflow-y': getOverflow() }],\n            /**\n             * Overscroll Behavior\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            overscroll: [{ overscroll: getOverscroll() }],\n            /**\n             * Overscroll Behavior X\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            'overscroll-x': [{ 'overscroll-x': getOverscroll() }],\n            /**\n             * Overscroll Behavior Y\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            'overscroll-y': [{ 'overscroll-y': getOverscroll() }],\n            /**\n             * Position\n             * @see https://tailwindcss.com/docs/position\n             */\n            position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n            /**\n             * Top / Right / Bottom / Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            inset: [{ inset: [inset] }],\n            /**\n             * Right / Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            'inset-x': [{ 'inset-x': [inset] }],\n            /**\n             * Top / Bottom\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            'inset-y': [{ 'inset-y': [inset] }],\n            /**\n             * Start\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            start: [{ start: [inset] }],\n            /**\n             * End\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            end: [{ end: [inset] }],\n            /**\n             * Top\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            top: [{ top: [inset] }],\n            /**\n             * Right\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            right: [{ right: [inset] }],\n            /**\n             * Bottom\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            bottom: [{ bottom: [inset] }],\n            /**\n             * Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            left: [{ left: [inset] }],\n            /**\n             * Visibility\n             * @see https://tailwindcss.com/docs/visibility\n             */\n            visibility: ['visible', 'invisible', 'collapse'],\n            /**\n             * Z-Index\n             * @see https://tailwindcss.com/docs/z-index\n             */\n            z: [{ z: ['auto', isInteger, isArbitraryValue] }],\n            // Flexbox and Grid\n            /**\n             * Flex Basis\n             * @see https://tailwindcss.com/docs/flex-basis\n             */\n            basis: [{ basis: getSpacingWithAutoAndArbitrary() }],\n            /**\n             * Flex Direction\n             * @see https://tailwindcss.com/docs/flex-direction\n             */\n            'flex-direction': [{ flex: ['row', 'row-reverse', 'col', 'col-reverse'] }],\n            /**\n             * Flex Wrap\n             * @see https://tailwindcss.com/docs/flex-wrap\n             */\n            'flex-wrap': [{ flex: ['wrap', 'wrap-reverse', 'nowrap'] }],\n            /**\n             * Flex\n             * @see https://tailwindcss.com/docs/flex\n             */\n            flex: [{ flex: ['1', 'auto', 'initial', 'none', isArbitraryValue] }],\n            /**\n             * Flex Grow\n             * @see https://tailwindcss.com/docs/flex-grow\n             */\n            grow: [{ grow: getZeroAndEmpty() }],\n            /**\n             * Flex Shrink\n             * @see https://tailwindcss.com/docs/flex-shrink\n             */\n            shrink: [{ shrink: getZeroAndEmpty() }],\n            /**\n             * Order\n             * @see https://tailwindcss.com/docs/order\n             */\n            order: [{ order: ['first', 'last', 'none', isInteger, isArbitraryValue] }],\n            /**\n             * Grid Template Columns\n             * @see https://tailwindcss.com/docs/grid-template-columns\n             */\n            'grid-cols': [{ 'grid-cols': [isAny] }],\n            /**\n             * Grid Column Start / End\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-start-end': [\n                {\n                    col: [\n                        'auto',\n                        { span: ['full', isInteger, isArbitraryValue] },\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Grid Column Start\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-start': [{ 'col-start': getNumberWithAutoAndArbitrary() }],\n            /**\n             * Grid Column End\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-end': [{ 'col-end': getNumberWithAutoAndArbitrary() }],\n            /**\n             * Grid Template Rows\n             * @see https://tailwindcss.com/docs/grid-template-rows\n             */\n            'grid-rows': [{ 'grid-rows': [isAny] }],\n            /**\n             * Grid Row Start / End\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-start-end': [\n                { row: ['auto', { span: [isInteger, isArbitraryValue] }, isArbitraryValue] },\n            ],\n            /**\n             * Grid Row Start\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-start': [{ 'row-start': getNumberWithAutoAndArbitrary() }],\n            /**\n             * Grid Row End\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-end': [{ 'row-end': getNumberWithAutoAndArbitrary() }],\n            /**\n             * Grid Auto Flow\n             * @see https://tailwindcss.com/docs/grid-auto-flow\n             */\n            'grid-flow': [{ 'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense'] }],\n            /**\n             * Grid Auto Columns\n             * @see https://tailwindcss.com/docs/grid-auto-columns\n             */\n            'auto-cols': [{ 'auto-cols': ['auto', 'min', 'max', 'fr', isArbitraryValue] }],\n            /**\n             * Grid Auto Rows\n             * @see https://tailwindcss.com/docs/grid-auto-rows\n             */\n            'auto-rows': [{ 'auto-rows': ['auto', 'min', 'max', 'fr', isArbitraryValue] }],\n            /**\n             * Gap\n             * @see https://tailwindcss.com/docs/gap\n             */\n            gap: [{ gap: [gap] }],\n            /**\n             * Gap X\n             * @see https://tailwindcss.com/docs/gap\n             */\n            'gap-x': [{ 'gap-x': [gap] }],\n            /**\n             * Gap Y\n             * @see https://tailwindcss.com/docs/gap\n             */\n            'gap-y': [{ 'gap-y': [gap] }],\n            /**\n             * Justify Content\n             * @see https://tailwindcss.com/docs/justify-content\n             */\n            'justify-content': [{ justify: ['normal', ...getAlign()] }],\n            /**\n             * Justify Items\n             * @see https://tailwindcss.com/docs/justify-items\n             */\n            'justify-items': [{ 'justify-items': ['start', 'end', 'center', 'stretch'] }],\n            /**\n             * Justify Self\n             * @see https://tailwindcss.com/docs/justify-self\n             */\n            'justify-self': [{ 'justify-self': ['auto', 'start', 'end', 'center', 'stretch'] }],\n            /**\n             * Align Content\n             * @see https://tailwindcss.com/docs/align-content\n             */\n            'align-content': [{ content: ['normal', ...getAlign(), 'baseline'] }],\n            /**\n             * Align Items\n             * @see https://tailwindcss.com/docs/align-items\n             */\n            'align-items': [{ items: ['start', 'end', 'center', 'baseline', 'stretch'] }],\n            /**\n             * Align Self\n             * @see https://tailwindcss.com/docs/align-self\n             */\n            'align-self': [{ self: ['auto', 'start', 'end', 'center', 'stretch', 'baseline'] }],\n            /**\n             * Place Content\n             * @see https://tailwindcss.com/docs/place-content\n             */\n            'place-content': [{ 'place-content': [...getAlign(), 'baseline'] }],\n            /**\n             * Place Items\n             * @see https://tailwindcss.com/docs/place-items\n             */\n            'place-items': [{ 'place-items': ['start', 'end', 'center', 'baseline', 'stretch'] }],\n            /**\n             * Place Self\n             * @see https://tailwindcss.com/docs/place-self\n             */\n            'place-self': [{ 'place-self': ['auto', 'start', 'end', 'center', 'stretch'] }],\n            // Spacing\n            /**\n             * Padding\n             * @see https://tailwindcss.com/docs/padding\n             */\n            p: [{ p: [padding] }],\n            /**\n             * Padding X\n             * @see https://tailwindcss.com/docs/padding\n             */\n            px: [{ px: [padding] }],\n            /**\n             * Padding Y\n             * @see https://tailwindcss.com/docs/padding\n             */\n            py: [{ py: [padding] }],\n            /**\n             * Padding Start\n             * @see https://tailwindcss.com/docs/padding\n             */\n            ps: [{ ps: [padding] }],\n            /**\n             * Padding End\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pe: [{ pe: [padding] }],\n            /**\n             * Padding Top\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pt: [{ pt: [padding] }],\n            /**\n             * Padding Right\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pr: [{ pr: [padding] }],\n            /**\n             * Padding Bottom\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pb: [{ pb: [padding] }],\n            /**\n             * Padding Left\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pl: [{ pl: [padding] }],\n            /**\n             * Margin\n             * @see https://tailwindcss.com/docs/margin\n             */\n            m: [{ m: [margin] }],\n            /**\n             * Margin X\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mx: [{ mx: [margin] }],\n            /**\n             * Margin Y\n             * @see https://tailwindcss.com/docs/margin\n             */\n            my: [{ my: [margin] }],\n            /**\n             * Margin Start\n             * @see https://tailwindcss.com/docs/margin\n             */\n            ms: [{ ms: [margin] }],\n            /**\n             * Margin End\n             * @see https://tailwindcss.com/docs/margin\n             */\n            me: [{ me: [margin] }],\n            /**\n             * Margin Top\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mt: [{ mt: [margin] }],\n            /**\n             * Margin Right\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mr: [{ mr: [margin] }],\n            /**\n             * Margin Bottom\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mb: [{ mb: [margin] }],\n            /**\n             * Margin Left\n             * @see https://tailwindcss.com/docs/margin\n             */\n            ml: [{ ml: [margin] }],\n            /**\n             * Space Between X\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-x': [{ 'space-x': [space] }],\n            /**\n             * Space Between X Reverse\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-x-reverse': ['space-x-reverse'],\n            /**\n             * Space Between Y\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-y': [{ 'space-y': [space] }],\n            /**\n             * Space Between Y Reverse\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-y-reverse': ['space-y-reverse'],\n            // Sizing\n            /**\n             * Width\n             * @see https://tailwindcss.com/docs/width\n             */\n            w: [\n                {\n                    w: [\n                        'auto',\n                        'min',\n                        'max',\n                        'fit',\n                        'svw',\n                        'lvw',\n                        'dvw',\n                        isArbitraryValue,\n                        spacing,\n                    ],\n                },\n            ],\n            /**\n             * Min-Width\n             * @see https://tailwindcss.com/docs/min-width\n             */\n            'min-w': [{ 'min-w': [isArbitraryValue, spacing, 'min', 'max', 'fit'] }],\n            /**\n             * Max-Width\n             * @see https://tailwindcss.com/docs/max-width\n             */\n            'max-w': [\n                {\n                    'max-w': [\n                        isArbitraryValue,\n                        spacing,\n                        'none',\n                        'full',\n                        'min',\n                        'max',\n                        'fit',\n                        'prose',\n                        { screen: [isTshirtSize] },\n                        isTshirtSize,\n                    ],\n                },\n            ],\n            /**\n             * Height\n             * @see https://tailwindcss.com/docs/height\n             */\n            h: [\n                {\n                    h: [\n                        isArbitraryValue,\n                        spacing,\n                        'auto',\n                        'min',\n                        'max',\n                        'fit',\n                        'svh',\n                        'lvh',\n                        'dvh',\n                    ],\n                },\n            ],\n            /**\n             * Min-Height\n             * @see https://tailwindcss.com/docs/min-height\n             */\n            'min-h': [\n                { 'min-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh'] },\n            ],\n            /**\n             * Max-Height\n             * @see https://tailwindcss.com/docs/max-height\n             */\n            'max-h': [\n                { 'max-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh'] },\n            ],\n            /**\n             * Size\n             * @see https://tailwindcss.com/docs/size\n             */\n            size: [{ size: [isArbitraryValue, spacing, 'auto', 'min', 'max', 'fit'] }],\n            // Typography\n            /**\n             * Font Size\n             * @see https://tailwindcss.com/docs/font-size\n             */\n            'font-size': [{ text: ['base', isTshirtSize, isArbitraryLength] }],\n            /**\n             * Font Smoothing\n             * @see https://tailwindcss.com/docs/font-smoothing\n             */\n            'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n            /**\n             * Font Style\n             * @see https://tailwindcss.com/docs/font-style\n             */\n            'font-style': ['italic', 'not-italic'],\n            /**\n             * Font Weight\n             * @see https://tailwindcss.com/docs/font-weight\n             */\n            'font-weight': [\n                {\n                    font: [\n                        'thin',\n                        'extralight',\n                        'light',\n                        'normal',\n                        'medium',\n                        'semibold',\n                        'bold',\n                        'extrabold',\n                        'black',\n                        isArbitraryNumber,\n                    ],\n                },\n            ],\n            /**\n             * Font Family\n             * @see https://tailwindcss.com/docs/font-family\n             */\n            'font-family': [{ font: [isAny] }],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-normal': ['normal-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-ordinal': ['ordinal'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-slashed-zero': ['slashed-zero'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-fraction': ['diagonal-fractions', 'stacked-fractons'],\n            /**\n             * Letter Spacing\n             * @see https://tailwindcss.com/docs/letter-spacing\n             */\n            tracking: [\n                {\n                    tracking: [\n                        'tighter',\n                        'tight',\n                        'normal',\n                        'wide',\n                        'wider',\n                        'widest',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Line Clamp\n             * @see https://tailwindcss.com/docs/line-clamp\n             */\n            'line-clamp': [{ 'line-clamp': ['none', isNumber, isArbitraryNumber] }],\n            /**\n             * Line Height\n             * @see https://tailwindcss.com/docs/line-height\n             */\n            leading: [\n                {\n                    leading: [\n                        'none',\n                        'tight',\n                        'snug',\n                        'normal',\n                        'relaxed',\n                        'loose',\n                        isLength,\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * List Style Image\n             * @see https://tailwindcss.com/docs/list-style-image\n             */\n            'list-image': [{ 'list-image': ['none', isArbitraryValue] }],\n            /**\n             * List Style Type\n             * @see https://tailwindcss.com/docs/list-style-type\n             */\n            'list-style-type': [{ list: ['none', 'disc', 'decimal', isArbitraryValue] }],\n            /**\n             * List Style Position\n             * @see https://tailwindcss.com/docs/list-style-position\n             */\n            'list-style-position': [{ list: ['inside', 'outside'] }],\n            /**\n             * Placeholder Color\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/placeholder-color\n             */\n            'placeholder-color': [{ placeholder: [colors] }],\n            /**\n             * Placeholder Opacity\n             * @see https://tailwindcss.com/docs/placeholder-opacity\n             */\n            'placeholder-opacity': [{ 'placeholder-opacity': [opacity] }],\n            /**\n             * Text Alignment\n             * @see https://tailwindcss.com/docs/text-align\n             */\n            'text-alignment': [{ text: ['left', 'center', 'right', 'justify', 'start', 'end'] }],\n            /**\n             * Text Color\n             * @see https://tailwindcss.com/docs/text-color\n             */\n            'text-color': [{ text: [colors] }],\n            /**\n             * Text Opacity\n             * @see https://tailwindcss.com/docs/text-opacity\n             */\n            'text-opacity': [{ 'text-opacity': [opacity] }],\n            /**\n             * Text Decoration\n             * @see https://tailwindcss.com/docs/text-decoration\n             */\n            'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n            /**\n             * Text Decoration Style\n             * @see https://tailwindcss.com/docs/text-decoration-style\n             */\n            'text-decoration-style': [{ decoration: [...getLineStyles(), 'wavy'] }],\n            /**\n             * Text Decoration Thickness\n             * @see https://tailwindcss.com/docs/text-decoration-thickness\n             */\n            'text-decoration-thickness': [\n                { decoration: ['auto', 'from-font', isLength, isArbitraryLength] },\n            ],\n            /**\n             * Text Underline Offset\n             * @see https://tailwindcss.com/docs/text-underline-offset\n             */\n            'underline-offset': [{ 'underline-offset': ['auto', isLength, isArbitraryValue] }],\n            /**\n             * Text Decoration Color\n             * @see https://tailwindcss.com/docs/text-decoration-color\n             */\n            'text-decoration-color': [{ decoration: [colors] }],\n            /**\n             * Text Transform\n             * @see https://tailwindcss.com/docs/text-transform\n             */\n            'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n            /**\n             * Text Overflow\n             * @see https://tailwindcss.com/docs/text-overflow\n             */\n            'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n            /**\n             * Text Wrap\n             * @see https://tailwindcss.com/docs/text-wrap\n             */\n            'text-wrap': [{ text: ['wrap', 'nowrap', 'balance', 'pretty'] }],\n            /**\n             * Text Indent\n             * @see https://tailwindcss.com/docs/text-indent\n             */\n            indent: [{ indent: getSpacingWithArbitrary() }],\n            /**\n             * Vertical Alignment\n             * @see https://tailwindcss.com/docs/vertical-align\n             */\n            'vertical-align': [\n                {\n                    align: [\n                        'baseline',\n                        'top',\n                        'middle',\n                        'bottom',\n                        'text-top',\n                        'text-bottom',\n                        'sub',\n                        'super',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Whitespace\n             * @see https://tailwindcss.com/docs/whitespace\n             */\n            whitespace: [\n                { whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap', 'break-spaces'] },\n            ],\n            /**\n             * Word Break\n             * @see https://tailwindcss.com/docs/word-break\n             */\n            break: [{ break: ['normal', 'words', 'all', 'keep'] }],\n            /**\n             * Hyphens\n             * @see https://tailwindcss.com/docs/hyphens\n             */\n            hyphens: [{ hyphens: ['none', 'manual', 'auto'] }],\n            /**\n             * Content\n             * @see https://tailwindcss.com/docs/content\n             */\n            content: [{ content: ['none', isArbitraryValue] }],\n            // Backgrounds\n            /**\n             * Background Attachment\n             * @see https://tailwindcss.com/docs/background-attachment\n             */\n            'bg-attachment': [{ bg: ['fixed', 'local', 'scroll'] }],\n            /**\n             * Background Clip\n             * @see https://tailwindcss.com/docs/background-clip\n             */\n            'bg-clip': [{ 'bg-clip': ['border', 'padding', 'content', 'text'] }],\n            /**\n             * Background Opacity\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/background-opacity\n             */\n            'bg-opacity': [{ 'bg-opacity': [opacity] }],\n            /**\n             * Background Origin\n             * @see https://tailwindcss.com/docs/background-origin\n             */\n            'bg-origin': [{ 'bg-origin': ['border', 'padding', 'content'] }],\n            /**\n             * Background Position\n             * @see https://tailwindcss.com/docs/background-position\n             */\n            'bg-position': [{ bg: [...getPositions(), isArbitraryPosition] }],\n            /**\n             * Background Repeat\n             * @see https://tailwindcss.com/docs/background-repeat\n             */\n            'bg-repeat': [{ bg: ['no-repeat', { repeat: ['', 'x', 'y', 'round', 'space'] }] }],\n            /**\n             * Background Size\n             * @see https://tailwindcss.com/docs/background-size\n             */\n            'bg-size': [{ bg: ['auto', 'cover', 'contain', isArbitrarySize] }],\n            /**\n             * Background Image\n             * @see https://tailwindcss.com/docs/background-image\n             */\n            'bg-image': [\n                {\n                    bg: [\n                        'none',\n                        { 'gradient-to': ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'] },\n                        isArbitraryImage,\n                    ],\n                },\n            ],\n            /**\n             * Background Color\n             * @see https://tailwindcss.com/docs/background-color\n             */\n            'bg-color': [{ bg: [colors] }],\n            /**\n             * Gradient Color Stops From Position\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-from-pos': [{ from: [gradientColorStopPositions] }],\n            /**\n             * Gradient Color Stops Via Position\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-via-pos': [{ via: [gradientColorStopPositions] }],\n            /**\n             * Gradient Color Stops To Position\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-to-pos': [{ to: [gradientColorStopPositions] }],\n            /**\n             * Gradient Color Stops From\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-from': [{ from: [gradientColorStops] }],\n            /**\n             * Gradient Color Stops Via\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-via': [{ via: [gradientColorStops] }],\n            /**\n             * Gradient Color Stops To\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-to': [{ to: [gradientColorStops] }],\n            // Borders\n            /**\n             * Border Radius\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            rounded: [{ rounded: [borderRadius] }],\n            /**\n             * Border Radius Start\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-s': [{ 'rounded-s': [borderRadius] }],\n            /**\n             * Border Radius End\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-e': [{ 'rounded-e': [borderRadius] }],\n            /**\n             * Border Radius Top\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-t': [{ 'rounded-t': [borderRadius] }],\n            /**\n             * Border Radius Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-r': [{ 'rounded-r': [borderRadius] }],\n            /**\n             * Border Radius Bottom\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-b': [{ 'rounded-b': [borderRadius] }],\n            /**\n             * Border Radius Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-l': [{ 'rounded-l': [borderRadius] }],\n            /**\n             * Border Radius Start Start\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-ss': [{ 'rounded-ss': [borderRadius] }],\n            /**\n             * Border Radius Start End\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-se': [{ 'rounded-se': [borderRadius] }],\n            /**\n             * Border Radius End End\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-ee': [{ 'rounded-ee': [borderRadius] }],\n            /**\n             * Border Radius End Start\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-es': [{ 'rounded-es': [borderRadius] }],\n            /**\n             * Border Radius Top Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-tl': [{ 'rounded-tl': [borderRadius] }],\n            /**\n             * Border Radius Top Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-tr': [{ 'rounded-tr': [borderRadius] }],\n            /**\n             * Border Radius Bottom Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-br': [{ 'rounded-br': [borderRadius] }],\n            /**\n             * Border Radius Bottom Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-bl': [{ 'rounded-bl': [borderRadius] }],\n            /**\n             * Border Width\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w': [{ border: [borderWidth] }],\n            /**\n             * Border Width X\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-x': [{ 'border-x': [borderWidth] }],\n            /**\n             * Border Width Y\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-y': [{ 'border-y': [borderWidth] }],\n            /**\n             * Border Width Start\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-s': [{ 'border-s': [borderWidth] }],\n            /**\n             * Border Width End\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-e': [{ 'border-e': [borderWidth] }],\n            /**\n             * Border Width Top\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-t': [{ 'border-t': [borderWidth] }],\n            /**\n             * Border Width Right\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-r': [{ 'border-r': [borderWidth] }],\n            /**\n             * Border Width Bottom\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-b': [{ 'border-b': [borderWidth] }],\n            /**\n             * Border Width Left\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-l': [{ 'border-l': [borderWidth] }],\n            /**\n             * Border Opacity\n             * @see https://tailwindcss.com/docs/border-opacity\n             */\n            'border-opacity': [{ 'border-opacity': [opacity] }],\n            /**\n             * Border Style\n             * @see https://tailwindcss.com/docs/border-style\n             */\n            'border-style': [{ border: [...getLineStyles(), 'hidden'] }],\n            /**\n             * Divide Width X\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-x': [{ 'divide-x': [borderWidth] }],\n            /**\n             * Divide Width X Reverse\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-x-reverse': ['divide-x-reverse'],\n            /**\n             * Divide Width Y\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-y': [{ 'divide-y': [borderWidth] }],\n            /**\n             * Divide Width Y Reverse\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-y-reverse': ['divide-y-reverse'],\n            /**\n             * Divide Opacity\n             * @see https://tailwindcss.com/docs/divide-opacity\n             */\n            'divide-opacity': [{ 'divide-opacity': [opacity] }],\n            /**\n             * Divide Style\n             * @see https://tailwindcss.com/docs/divide-style\n             */\n            'divide-style': [{ divide: getLineStyles() }],\n            /**\n             * Border Color\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color': [{ border: [borderColor] }],\n            /**\n             * Border Color X\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-x': [{ 'border-x': [borderColor] }],\n            /**\n             * Border Color Y\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-y': [{ 'border-y': [borderColor] }],\n            /**\n             * Border Color Top\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-t': [{ 'border-t': [borderColor] }],\n            /**\n             * Border Color Right\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-r': [{ 'border-r': [borderColor] }],\n            /**\n             * Border Color Bottom\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-b': [{ 'border-b': [borderColor] }],\n            /**\n             * Border Color Left\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-l': [{ 'border-l': [borderColor] }],\n            /**\n             * Divide Color\n             * @see https://tailwindcss.com/docs/divide-color\n             */\n            'divide-color': [{ divide: [borderColor] }],\n            /**\n             * Outline Style\n             * @see https://tailwindcss.com/docs/outline-style\n             */\n            'outline-style': [{ outline: ['', ...getLineStyles()] }],\n            /**\n             * Outline Offset\n             * @see https://tailwindcss.com/docs/outline-offset\n             */\n            'outline-offset': [{ 'outline-offset': [isLength, isArbitraryValue] }],\n            /**\n             * Outline Width\n             * @see https://tailwindcss.com/docs/outline-width\n             */\n            'outline-w': [{ outline: [isLength, isArbitraryLength] }],\n            /**\n             * Outline Color\n             * @see https://tailwindcss.com/docs/outline-color\n             */\n            'outline-color': [{ outline: [colors] }],\n            /**\n             * Ring Width\n             * @see https://tailwindcss.com/docs/ring-width\n             */\n            'ring-w': [{ ring: getLengthWithEmptyAndArbitrary() }],\n            /**\n             * Ring Width Inset\n             * @see https://tailwindcss.com/docs/ring-width\n             */\n            'ring-w-inset': ['ring-inset'],\n            /**\n             * Ring Color\n             * @see https://tailwindcss.com/docs/ring-color\n             */\n            'ring-color': [{ ring: [colors] }],\n            /**\n             * Ring Opacity\n             * @see https://tailwindcss.com/docs/ring-opacity\n             */\n            'ring-opacity': [{ 'ring-opacity': [opacity] }],\n            /**\n             * Ring Offset Width\n             * @see https://tailwindcss.com/docs/ring-offset-width\n             */\n            'ring-offset-w': [{ 'ring-offset': [isLength, isArbitraryLength] }],\n            /**\n             * Ring Offset Color\n             * @see https://tailwindcss.com/docs/ring-offset-color\n             */\n            'ring-offset-color': [{ 'ring-offset': [colors] }],\n            // Effects\n            /**\n             * Box Shadow\n             * @see https://tailwindcss.com/docs/box-shadow\n             */\n            shadow: [{ shadow: ['', 'inner', 'none', isTshirtSize, isArbitraryShadow] }],\n            /**\n             * Box Shadow Color\n             * @see https://tailwindcss.com/docs/box-shadow-color\n             */\n            'shadow-color': [{ shadow: [isAny] }],\n            /**\n             * Opacity\n             * @see https://tailwindcss.com/docs/opacity\n             */\n            opacity: [{ opacity: [opacity] }],\n            /**\n             * Mix Blend Mode\n             * @see https://tailwindcss.com/docs/mix-blend-mode\n             */\n            'mix-blend': [{ 'mix-blend': getBlendModes() }],\n            /**\n             * Background Blend Mode\n             * @see https://tailwindcss.com/docs/background-blend-mode\n             */\n            'bg-blend': [{ 'bg-blend': getBlendModes() }],\n            // Filters\n            /**\n             * Filter\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/filter\n             */\n            filter: [{ filter: ['', 'none'] }],\n            /**\n             * Blur\n             * @see https://tailwindcss.com/docs/blur\n             */\n            blur: [{ blur: [blur] }],\n            /**\n             * Brightness\n             * @see https://tailwindcss.com/docs/brightness\n             */\n            brightness: [{ brightness: [brightness] }],\n            /**\n             * Contrast\n             * @see https://tailwindcss.com/docs/contrast\n             */\n            contrast: [{ contrast: [contrast] }],\n            /**\n             * Drop Shadow\n             * @see https://tailwindcss.com/docs/drop-shadow\n             */\n            'drop-shadow': [{ 'drop-shadow': ['', 'none', isTshirtSize, isArbitraryValue] }],\n            /**\n             * Grayscale\n             * @see https://tailwindcss.com/docs/grayscale\n             */\n            grayscale: [{ grayscale: [grayscale] }],\n            /**\n             * Hue Rotate\n             * @see https://tailwindcss.com/docs/hue-rotate\n             */\n            'hue-rotate': [{ 'hue-rotate': [hueRotate] }],\n            /**\n             * Invert\n             * @see https://tailwindcss.com/docs/invert\n             */\n            invert: [{ invert: [invert] }],\n            /**\n             * Saturate\n             * @see https://tailwindcss.com/docs/saturate\n             */\n            saturate: [{ saturate: [saturate] }],\n            /**\n             * Sepia\n             * @see https://tailwindcss.com/docs/sepia\n             */\n            sepia: [{ sepia: [sepia] }],\n            /**\n             * Backdrop Filter\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/backdrop-filter\n             */\n            'backdrop-filter': [{ 'backdrop-filter': ['', 'none'] }],\n            /**\n             * Backdrop Blur\n             * @see https://tailwindcss.com/docs/backdrop-blur\n             */\n            'backdrop-blur': [{ 'backdrop-blur': [blur] }],\n            /**\n             * Backdrop Brightness\n             * @see https://tailwindcss.com/docs/backdrop-brightness\n             */\n            'backdrop-brightness': [{ 'backdrop-brightness': [brightness] }],\n            /**\n             * Backdrop Contrast\n             * @see https://tailwindcss.com/docs/backdrop-contrast\n             */\n            'backdrop-contrast': [{ 'backdrop-contrast': [contrast] }],\n            /**\n             * Backdrop Grayscale\n             * @see https://tailwindcss.com/docs/backdrop-grayscale\n             */\n            'backdrop-grayscale': [{ 'backdrop-grayscale': [grayscale] }],\n            /**\n             * Backdrop Hue Rotate\n             * @see https://tailwindcss.com/docs/backdrop-hue-rotate\n             */\n            'backdrop-hue-rotate': [{ 'backdrop-hue-rotate': [hueRotate] }],\n            /**\n             * Backdrop Invert\n             * @see https://tailwindcss.com/docs/backdrop-invert\n             */\n            'backdrop-invert': [{ 'backdrop-invert': [invert] }],\n            /**\n             * Backdrop Opacity\n             * @see https://tailwindcss.com/docs/backdrop-opacity\n             */\n            'backdrop-opacity': [{ 'backdrop-opacity': [opacity] }],\n            /**\n             * Backdrop Saturate\n             * @see https://tailwindcss.com/docs/backdrop-saturate\n             */\n            'backdrop-saturate': [{ 'backdrop-saturate': [saturate] }],\n            /**\n             * Backdrop Sepia\n             * @see https://tailwindcss.com/docs/backdrop-sepia\n             */\n            'backdrop-sepia': [{ 'backdrop-sepia': [sepia] }],\n            // Tables\n            /**\n             * Border Collapse\n             * @see https://tailwindcss.com/docs/border-collapse\n             */\n            'border-collapse': [{ border: ['collapse', 'separate'] }],\n            /**\n             * Border Spacing\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing': [{ 'border-spacing': [borderSpacing] }],\n            /**\n             * Border Spacing X\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing-x': [{ 'border-spacing-x': [borderSpacing] }],\n            /**\n             * Border Spacing Y\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing-y': [{ 'border-spacing-y': [borderSpacing] }],\n            /**\n             * Table Layout\n             * @see https://tailwindcss.com/docs/table-layout\n             */\n            'table-layout': [{ table: ['auto', 'fixed'] }],\n            /**\n             * Caption Side\n             * @see https://tailwindcss.com/docs/caption-side\n             */\n            caption: [{ caption: ['top', 'bottom'] }],\n            // Transitions and Animation\n            /**\n             * Tranisition Property\n             * @see https://tailwindcss.com/docs/transition-property\n             */\n            transition: [\n                {\n                    transition: [\n                        'none',\n                        'all',\n                        '',\n                        'colors',\n                        'opacity',\n                        'shadow',\n                        'transform',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Transition Duration\n             * @see https://tailwindcss.com/docs/transition-duration\n             */\n            duration: [{ duration: getNumberAndArbitrary() }],\n            /**\n             * Transition Timing Function\n             * @see https://tailwindcss.com/docs/transition-timing-function\n             */\n            ease: [{ ease: ['linear', 'in', 'out', 'in-out', isArbitraryValue] }],\n            /**\n             * Transition Delay\n             * @see https://tailwindcss.com/docs/transition-delay\n             */\n            delay: [{ delay: getNumberAndArbitrary() }],\n            /**\n             * Animation\n             * @see https://tailwindcss.com/docs/animation\n             */\n            animate: [{ animate: ['none', 'spin', 'ping', 'pulse', 'bounce', isArbitraryValue] }],\n            // Transforms\n            /**\n             * Transform\n             * @see https://tailwindcss.com/docs/transform\n             */\n            transform: [{ transform: ['', 'gpu', 'none'] }],\n            /**\n             * Scale\n             * @see https://tailwindcss.com/docs/scale\n             */\n            scale: [{ scale: [scale] }],\n            /**\n             * Scale X\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-x': [{ 'scale-x': [scale] }],\n            /**\n             * Scale Y\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-y': [{ 'scale-y': [scale] }],\n            /**\n             * Rotate\n             * @see https://tailwindcss.com/docs/rotate\n             */\n            rotate: [{ rotate: [isInteger, isArbitraryValue] }],\n            /**\n             * Translate X\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-x': [{ 'translate-x': [translate] }],\n            /**\n             * Translate Y\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-y': [{ 'translate-y': [translate] }],\n            /**\n             * Skew X\n             * @see https://tailwindcss.com/docs/skew\n             */\n            'skew-x': [{ 'skew-x': [skew] }],\n            /**\n             * Skew Y\n             * @see https://tailwindcss.com/docs/skew\n             */\n            'skew-y': [{ 'skew-y': [skew] }],\n            /**\n             * Transform Origin\n             * @see https://tailwindcss.com/docs/transform-origin\n             */\n            'transform-origin': [\n                {\n                    origin: [\n                        'center',\n                        'top',\n                        'top-right',\n                        'right',\n                        'bottom-right',\n                        'bottom',\n                        'bottom-left',\n                        'left',\n                        'top-left',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            // Interactivity\n            /**\n             * Accent Color\n             * @see https://tailwindcss.com/docs/accent-color\n             */\n            accent: [{ accent: ['auto', colors] }],\n            /**\n             * Appearance\n             * @see https://tailwindcss.com/docs/appearance\n             */\n            appearance: [{ appearance: ['none', 'auto'] }],\n            /**\n             * Cursor\n             * @see https://tailwindcss.com/docs/cursor\n             */\n            cursor: [\n                {\n                    cursor: [\n                        'auto',\n                        'default',\n                        'pointer',\n                        'wait',\n                        'text',\n                        'move',\n                        'help',\n                        'not-allowed',\n                        'none',\n                        'context-menu',\n                        'progress',\n                        'cell',\n                        'crosshair',\n                        'vertical-text',\n                        'alias',\n                        'copy',\n                        'no-drop',\n                        'grab',\n                        'grabbing',\n                        'all-scroll',\n                        'col-resize',\n                        'row-resize',\n                        'n-resize',\n                        'e-resize',\n                        's-resize',\n                        'w-resize',\n                        'ne-resize',\n                        'nw-resize',\n                        'se-resize',\n                        'sw-resize',\n                        'ew-resize',\n                        'ns-resize',\n                        'nesw-resize',\n                        'nwse-resize',\n                        'zoom-in',\n                        'zoom-out',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Caret Color\n             * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\n             */\n            'caret-color': [{ caret: [colors] }],\n            /**\n             * Pointer Events\n             * @see https://tailwindcss.com/docs/pointer-events\n             */\n            'pointer-events': [{ 'pointer-events': ['none', 'auto'] }],\n            /**\n             * Resize\n             * @see https://tailwindcss.com/docs/resize\n             */\n            resize: [{ resize: ['none', 'y', 'x', ''] }],\n            /**\n             * Scroll Behavior\n             * @see https://tailwindcss.com/docs/scroll-behavior\n             */\n            'scroll-behavior': [{ scroll: ['auto', 'smooth'] }],\n            /**\n             * Scroll Margin\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-m': [{ 'scroll-m': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin X\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mx': [{ 'scroll-mx': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin Y\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-my': [{ 'scroll-my': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin Start\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-ms': [{ 'scroll-ms': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin End\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-me': [{ 'scroll-me': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin Top\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mt': [{ 'scroll-mt': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin Right\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mr': [{ 'scroll-mr': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin Bottom\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mb': [{ 'scroll-mb': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Margin Left\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-ml': [{ 'scroll-ml': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-p': [{ 'scroll-p': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding X\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-px': [{ 'scroll-px': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding Y\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-py': [{ 'scroll-py': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding Start\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-ps': [{ 'scroll-ps': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding End\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pe': [{ 'scroll-pe': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding Top\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pt': [{ 'scroll-pt': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding Right\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pr': [{ 'scroll-pr': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding Bottom\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pb': [{ 'scroll-pb': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Padding Left\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pl': [{ 'scroll-pl': getSpacingWithArbitrary() }],\n            /**\n             * Scroll Snap Align\n             * @see https://tailwindcss.com/docs/scroll-snap-align\n             */\n            'snap-align': [{ snap: ['start', 'end', 'center', 'align-none'] }],\n            /**\n             * Scroll Snap Stop\n             * @see https://tailwindcss.com/docs/scroll-snap-stop\n             */\n            'snap-stop': [{ snap: ['normal', 'always'] }],\n            /**\n             * Scroll Snap Type\n             * @see https://tailwindcss.com/docs/scroll-snap-type\n             */\n            'snap-type': [{ snap: ['none', 'x', 'y', 'both'] }],\n            /**\n             * Scroll Snap Type Strictness\n             * @see https://tailwindcss.com/docs/scroll-snap-type\n             */\n            'snap-strictness': [{ snap: ['mandatory', 'proximity'] }],\n            /**\n             * Touch Action\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            touch: [\n                {\n                    touch: ['auto', 'none', 'manipulation'],\n                },\n            ],\n            /**\n             * Touch Action X\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            'touch-x': [\n                {\n                    'touch-pan': ['x', 'left', 'right'],\n                },\n            ],\n            /**\n             * Touch Action Y\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            'touch-y': [\n                {\n                    'touch-pan': ['y', 'up', 'down'],\n                },\n            ],\n            /**\n             * Touch Action Pinch Zoom\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            'touch-pz': ['touch-pinch-zoom'],\n            /**\n             * User Select\n             * @see https://tailwindcss.com/docs/user-select\n             */\n            select: [{ select: ['none', 'text', 'all', 'auto'] }],\n            /**\n             * Will Change\n             * @see https://tailwindcss.com/docs/will-change\n             */\n            'will-change': [\n                { 'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryValue] },\n            ],\n            // SVG\n            /**\n             * Fill\n             * @see https://tailwindcss.com/docs/fill\n             */\n            fill: [{ fill: [colors, 'none'] }],\n            /**\n             * Stroke Width\n             * @see https://tailwindcss.com/docs/stroke-width\n             */\n            'stroke-w': [{ stroke: [isLength, isArbitraryLength, isArbitraryNumber] }],\n            /**\n             * Stroke\n             * @see https://tailwindcss.com/docs/stroke\n             */\n            stroke: [{ stroke: [colors, 'none'] }],\n            // Accessibility\n            /**\n             * Screen Readers\n             * @see https://tailwindcss.com/docs/screen-readers\n             */\n            sr: ['sr-only', 'not-sr-only'],\n            /**\n             * Forced Color Adjust\n             * @see https://tailwindcss.com/docs/forced-color-adjust\n             */\n            'forced-color-adjust': [{ 'forced-color-adjust': ['auto', 'none'] }],\n        },\n        conflictingClassGroups: {\n            overflow: ['overflow-x', 'overflow-y'],\n            overscroll: ['overscroll-x', 'overscroll-y'],\n            inset: ['inset-x', 'inset-y', 'start', 'end', 'top', 'right', 'bottom', 'left'],\n            'inset-x': ['right', 'left'],\n            'inset-y': ['top', 'bottom'],\n            flex: ['basis', 'grow', 'shrink'],\n            gap: ['gap-x', 'gap-y'],\n            p: ['px', 'py', 'ps', 'pe', 'pt', 'pr', 'pb', 'pl'],\n            px: ['pr', 'pl'],\n            py: ['pt', 'pb'],\n            m: ['mx', 'my', 'ms', 'me', 'mt', 'mr', 'mb', 'ml'],\n            mx: ['mr', 'ml'],\n            my: ['mt', 'mb'],\n            size: ['w', 'h'],\n            'font-size': ['leading'],\n            'fvn-normal': [\n                'fvn-ordinal',\n                'fvn-slashed-zero',\n                'fvn-figure',\n                'fvn-spacing',\n                'fvn-fraction',\n            ],\n            'fvn-ordinal': ['fvn-normal'],\n            'fvn-slashed-zero': ['fvn-normal'],\n            'fvn-figure': ['fvn-normal'],\n            'fvn-spacing': ['fvn-normal'],\n            'fvn-fraction': ['fvn-normal'],\n            'line-clamp': ['display', 'overflow'],\n            rounded: [\n                'rounded-s',\n                'rounded-e',\n                'rounded-t',\n                'rounded-r',\n                'rounded-b',\n                'rounded-l',\n                'rounded-ss',\n                'rounded-se',\n                'rounded-ee',\n                'rounded-es',\n                'rounded-tl',\n                'rounded-tr',\n                'rounded-br',\n                'rounded-bl',\n            ],\n            'rounded-s': ['rounded-ss', 'rounded-es'],\n            'rounded-e': ['rounded-se', 'rounded-ee'],\n            'rounded-t': ['rounded-tl', 'rounded-tr'],\n            'rounded-r': ['rounded-tr', 'rounded-br'],\n            'rounded-b': ['rounded-br', 'rounded-bl'],\n            'rounded-l': ['rounded-tl', 'rounded-bl'],\n            'border-spacing': ['border-spacing-x', 'border-spacing-y'],\n            'border-w': [\n                'border-w-s',\n                'border-w-e',\n                'border-w-t',\n                'border-w-r',\n                'border-w-b',\n                'border-w-l',\n            ],\n            'border-w-x': ['border-w-r', 'border-w-l'],\n            'border-w-y': ['border-w-t', 'border-w-b'],\n            'border-color': [\n                'border-color-t',\n                'border-color-r',\n                'border-color-b',\n                'border-color-l',\n            ],\n            'border-color-x': ['border-color-r', 'border-color-l'],\n            'border-color-y': ['border-color-t', 'border-color-b'],\n            'scroll-m': [\n                'scroll-mx',\n                'scroll-my',\n                'scroll-ms',\n                'scroll-me',\n                'scroll-mt',\n                'scroll-mr',\n                'scroll-mb',\n                'scroll-ml',\n            ],\n            'scroll-mx': ['scroll-mr', 'scroll-ml'],\n            'scroll-my': ['scroll-mt', 'scroll-mb'],\n            'scroll-p': [\n                'scroll-px',\n                'scroll-py',\n                'scroll-ps',\n                'scroll-pe',\n                'scroll-pt',\n                'scroll-pr',\n                'scroll-pb',\n                'scroll-pl',\n            ],\n            'scroll-px': ['scroll-pr', 'scroll-pl'],\n            'scroll-py': ['scroll-pt', 'scroll-pb'],\n            touch: ['touch-x', 'touch-y', 'touch-pz'],\n            'touch-x': ['touch'],\n            'touch-y': ['touch'],\n            'touch-pz': ['touch'],\n        },\n        conflictingClassGroupModifiers: {\n            'font-size': ['leading'],\n        },\n    } as const satisfies Config<DefaultClassGroupIds, DefaultThemeGroupIds>\n}\n","import { ConfigExtension, GenericConfig } from './types'\n\n/**\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\n * @param configExtension Partial config to merge into the `baseConfig`.\n */\nexport function mergeConfigs<ClassGroupIds extends string, ThemeGroupIds extends string = never>(\n    baseConfig: GenericConfig,\n    {\n        cacheSize,\n        prefix,\n        separator,\n        extend = {},\n        override = {},\n    }: ConfigExtension<ClassGroupIds, ThemeGroupIds>,\n) {\n    overrideProperty(baseConfig, 'cacheSize', cacheSize)\n    overrideProperty(baseConfig, 'prefix', prefix)\n    overrideProperty(baseConfig, 'separator', separator)\n\n    for (const configKey in override) {\n        overrideConfigProperties(\n            baseConfig[configKey as keyof typeof override],\n            override[configKey as keyof typeof override],\n        )\n    }\n\n    for (const key in extend) {\n        mergeConfigProperties(\n            baseConfig[key as keyof typeof extend],\n            extend[key as keyof typeof extend],\n        )\n    }\n\n    return baseConfig\n}\n\nfunction overrideProperty<T extends object, K extends keyof T>(\n    baseObject: T,\n    overrideKey: K,\n    overrideValue: T[K] | undefined,\n) {\n    if (overrideValue !== undefined) {\n        baseObject[overrideKey] = overrideValue\n    }\n}\n\nfunction overrideConfigProperties(\n    baseObject: Partial<Record<string, readonly unknown[]>>,\n    overrideObject: Partial<Record<string, readonly unknown[]>> | undefined,\n) {\n    if (overrideObject) {\n        for (const key in overrideObject) {\n            overrideProperty(baseObject, key, overrideObject[key])\n        }\n    }\n}\n\nfunction mergeConfigProperties(\n    baseObject: Partial<Record<string, readonly unknown[]>>,\n    mergeObject: Partial<Record<string, readonly unknown[]>> | undefined,\n) {\n    if (mergeObject) {\n        for (const key in mergeObject) {\n            const mergeValue = mergeObject[key]\n\n            if (mergeValue !== undefined) {\n                baseObject[key] = (baseObject[key] || []).concat(mergeValue)\n            }\n        }\n    }\n}\n","import { createTailwindMerge } from './create-tailwind-merge'\nimport { getDefaultConfig } from './default-config'\nimport { mergeConfigs } from './merge-configs'\nimport { ConfigExtension, DefaultClassGroupIds, DefaultThemeGroupIds, GenericConfig } from './types'\n\ntype CreateConfigSubsequent = (config: GenericConfig) => GenericConfig\n\nexport function extendTailwindMerge<\n    AdditionalClassGroupIds extends string = never,\n    AdditionalThemeGroupIds extends string = never,\n>(\n    configExtension:\n        | ConfigExtension<\n              DefaultClassGroupIds | AdditionalClassGroupIds,\n              DefaultThemeGroupIds | AdditionalThemeGroupIds\n          >\n        | CreateConfigSubsequent,\n    ...createConfig: CreateConfigSubsequent[]\n) {\n    return typeof configExtension === 'function'\n        ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig)\n        : createTailwindMerge(\n              () => mergeConfigs(getDefaultConfig(), configExtension),\n              ...createConfig,\n          )\n}\n","import { createTailwindMerge } from './create-tailwind-merge'\nimport { getDefaultConfig } from './default-config'\n\nexport const twMerge = createTailwindMerge(getDefaultConfig)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}