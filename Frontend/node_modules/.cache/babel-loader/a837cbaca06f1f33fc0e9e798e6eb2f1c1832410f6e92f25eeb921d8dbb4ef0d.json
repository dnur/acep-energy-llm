{"ast":null,"code":"import { useCallback as $3vqmr$useCallback } from \"react\";\n\n/**\n * Set a given ref to a given value\n * This utility takes care of different types of refs: callback refs and RefObject(s)\n */\nfunction $6ed0406888f73fc4$var$setRef(ref, value) {\n  if (typeof ref === 'function') ref(value);else if (ref !== null && ref !== undefined) ref.current = value;\n}\n/**\n * A utility to compose multiple refs together\n * Accepts callback refs and RefObject(s)\n */\nfunction $6ed0406888f73fc4$export$43e446d32b3d21af() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n  return node => refs.forEach(ref => $6ed0406888f73fc4$var$setRef(ref, node));\n}\n/**\n * A custom hook that composes multiple refs\n * Accepts callback refs and RefObject(s)\n */\nfunction $6ed0406888f73fc4$export$c7b2cbe3552a0d05() {\n  for (var _len2 = arguments.length, refs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    refs[_key2] = arguments[_key2];\n  }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return $3vqmr$useCallback($6ed0406888f73fc4$export$43e446d32b3d21af(...refs), refs);\n}\nexport { $6ed0406888f73fc4$export$43e446d32b3d21af as composeRefs, $6ed0406888f73fc4$export$c7b2cbe3552a0d05 as useComposedRefs };","map":{"version":3,"names":["$6ed0406888f73fc4$var$setRef","setRef","ref","value","undefined","current","$6ed0406888f73fc4$export$43e446d32b3d21af","composeRefs","_len","arguments","length","refs","Array","_key","node","forEach","$6ed0406888f73fc4$export$c7b2cbe3552a0d05","useComposedRefs","_len2","_key2","$3vqmr$useCallback"],"sources":["/Users/whitneywaldinger/acep-energy-llm/Frontend/node_modules/@radix-ui/react-compose-refs/dist/packages/react/compose-refs/src/index.ts","/Users/whitneywaldinger/acep-energy-llm/Frontend/node_modules/@radix-ui/react-compose-refs/dist/packages/react/compose-refs/src/composeRefs.tsx"],"sourcesContent":["export { composeRefs, useComposedRefs } from './composeRefs';\n","import * as React from 'react';\n\ntype PossibleRef<T> = React.Ref<T> | undefined;\n\n/**\n * Set a given ref to a given value\n * This utility takes care of different types of refs: callback refs and RefObject(s)\n */\nfunction setRef<T>(ref: PossibleRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref !== null && ref !== undefined) {\n    (ref as React.MutableRefObject<T>).current = value;\n  }\n}\n\n/**\n * A utility to compose multiple refs together\n * Accepts callback refs and RefObject(s)\n */\nfunction composeRefs<T>(...refs: PossibleRef<T>[]) {\n  return (node: T) => refs.forEach((ref) => setRef(ref, node));\n}\n\n/**\n * A custom hook that composes multiple refs\n * Accepts callback refs and RefObject(s)\n */\nfunction useComposedRefs<T>(...refs: PossibleRef<T>[]) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useCallback(composeRefs(...refs), refs);\n}\n\nexport { composeRefs, useComposedRefs };\n"],"mappings":";;ACIA;;;;AAIA,SAASA,4BAATC,CAAmBC,GAAnB,EAAwCC,KAAxC,EAAkD;EAChD,IAAI,OAAOD,GAAP,KAAe,UAAnB,EACEA,GAAG,CAACC,KAAD,CAAH,MACK,IAAID,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKE,SAA5B,EACJF,GAAD,CAAmCG,OAAnC,GAA6CF,KAA7C;;AAIJ;;;;AAIA,SAASG,yCAATC,CAAA,EAAmD;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAxBC,IAA3B,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAA2BF,IAA3B,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;EAAA;EACE,OAAQC,IAAD,IAAaH,IAAI,CAACI,OAAL,CAAcb,GAAD,IAASF,4BAAM,CAACE,GAAD,EAAMY,IAAN,CAA5B,CAApB;;AAGF;;;;AAIA,SAASE,yCAATC,CAAA,EAAuD;EAAA,SAAAC,KAAA,GAAAT,SAAA,CAAAC,MAAA,EAAxBC,IAA/B,OAAAC,KAAA,CAAAM,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;IAA+BR,IAA/B,CAAAQ,KAAA,IAAAV,SAAA,CAAAU,KAAA;EAAA;EACE;EACA,OAAOC,kBAAA,CAAkBd,yCAAW,IAAIK,IAAJ,CAA7B,EAAwCA,IAAxC,CAAP"},"metadata":{},"sourceType":"module","externalDependencies":[]}